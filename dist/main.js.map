{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/rendering/react/combat/combat.scss","webpack:///./src/rendering/react/general.scss","webpack:///./src/rendering/react/heroes/heroes.scss","webpack:///./src/rendering/react/map/map.scss","webpack:///./src/rendering/react/structure.scss","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./src/common/number-formatting-service.ts","webpack:///./src/common/observable-subscription.ts","webpack:///./src/common/observable.ts","webpack:///./src/game/Game.ts","webpack:///./src/game/arenas/arena-room-encounter.ts","webpack:///./src/game/arenas/arena-room.ts","webpack:///./src/game/arenas/arena-type-service.ts","webpack:///./src/game/arenas/arena-type.ts","webpack:///./src/game/arenas/arena.ts","webpack:///./src/game/attributes/attribute-type-service.ts","webpack:///./src/game/attributes/attributes.ts","webpack:///./src/game/game-controller.ts","webpack:///./src/game/game-runner.ts","webpack:///./src/game/game-services.ts","webpack:///./src/game/heroes/hero-type-service.ts","webpack:///./src/game/heroes/hero-type.ts","webpack:///./src/game/heroes/hero.ts","webpack:///./src/game/items/item-body-location.ts","webpack:///./src/game/items/item-category.ts","webpack:///./src/game/items/item-type-service.ts","webpack:///./src/game/items/item-type.ts","webpack:///./src/game/items/item.ts","webpack:///./src/game/items/passive-ability-argument-type.ts","webpack:///./src/game/items/passive-ability-generator-service.ts","webpack:///./src/game/items/passive-ability-generator.ts","webpack:///./src/game/items/passive-ability-type-service.ts","webpack:///./src/game/items/passive-ability-type.ts","webpack:///./src/game/items/passive-ability.ts","webpack:///./src/game/monsters/monster-service.ts","webpack:///./src/game/monsters/monster-type-service.ts","webpack:///./src/game/monsters/monster-type.ts","webpack:///./src/game/monsters/monster.ts","webpack:///./src/game/shared/random-service.ts","webpack:///./src/game/shared/value-container.ts","webpack:///./src/game/skills/damage-type.ts","webpack:///./src/game/skills/skill-tag.ts","webpack:///./src/game/skills/skill-type-service.ts","webpack:///./src/game/skills/skill-type.ts","webpack:///./src/game/skills/skill.ts","webpack:///./src/game/version-service.ts","webpack:///./src/rendering/react/combat/combat.scss?2466","webpack:///./src/rendering/react/combat/ui-combat-arena-character.tsx","webpack:///./src/rendering/react/combat/ui-combat-arena-skill.tsx","webpack:///./src/rendering/react/combat/ui-combat-arena.tsx","webpack:///./src/rendering/react/combat/ui-combat-body.tsx","webpack:///./src/rendering/react/general.scss?99c5","webpack:///./src/rendering/react/heroes/heroes.scss?1748","webpack:///./src/rendering/react/heroes/ui-heroes-body.tsx","webpack:///./src/rendering/react/index.tsx","webpack:///./src/rendering/react/map/map.scss?b686","webpack:///./src/rendering/react/map/ui-map-arena-type-information.tsx","webpack:///./src/rendering/react/map/ui-map-body.tsx","webpack:///./src/rendering/react/shared/ui-draggable-container.tsx","webpack:///./src/rendering/react/shared/ui-progress-bar.tsx","webpack:///./src/rendering/react/shared/ui-tab-button.tsx","webpack:///./src/rendering/react/structure.scss?1cf2","webpack:///./src/rendering/react/ui-body.tsx","webpack:///./src/rendering/react/ui-game-context.tsx","webpack:///./src/rendering/react/ui-game.tsx","webpack:///./src/rendering/react/ui-header.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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6B,EAAE,uCAAuC,wBAAwB,EAAE,gDAAgD,wBAAwB,EAAE,2BAA2B,uBAAuB,EAAE,uBAAuB,kBAAkB,EAAE,WAAW,kBAAkB,uBAAuB,EAAE,gBAAgB,oBAAoB,6BAA6B,0BAA0B,oBAAoB,sBAAsB,wBAAwB,gCAAgC,EAAE,yBAAyB,kCAAkC,EAAE,qCAAqC,kCAAkC,EAAE,eAAe,kBAAkB,kBAAkB,EAAE;AACt/B;AACA;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;;AC7Fa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAE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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/rendering/react/index.tsx\");\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#combat-body-container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex; }\\n  #combat-body-container .arenas-container {\\n    width: 300px;\\n    background-color: #87583A;\\n    border-right: 1px solid black; }\\n  #combat-body-container .selected-arena-container {\\n    flex: 1 1 auto; }\\n    #combat-body-container .selected-arena-container .arena {\\n      height: 100%;\\n      width: 100%;\\n      background-size: 100% 100%;\\n      display: flex;\\n      flex-direction: column;\\n      position: relative; }\\n      #combat-body-container .selected-arena-container .arena .header {\\n        flex: 0 0 auto;\\n        display: flex;\\n        justify-content: space-between; }\\n        #combat-body-container .selected-arena-container .arena .header .room-info {\\n          display: flex;\\n          flex-direction: column; }\\n        #combat-body-container .selected-arena-container .arena .header .arena-info {\\n          display: flex;\\n          flex-direction: column; }\\n      #combat-body-container .selected-arena-container .arena .body {\\n        flex: 1 1 auto;\\n        position: relative; }\\n        #combat-body-container .selected-arena-container .arena .body .character-container {\\n          position: absolute;\\n          width: 200px;\\n          border: 2px solid transparent; }\\n          #combat-body-container .selected-arena-container .arena .body .character-container.selectable {\\n            cursor: pointer; }\\n          #combat-body-container .selected-arena-container .arena .body .character-container.selected:not(.legal-target) {\\n            border-color: green; }\\n          #combat-body-container .selected-arena-container .arena .body .character-container.legal-target {\\n            cursor: pointer;\\n            border-color: white;\\n            border-style: dashed; }\\n            #combat-body-container .selected-arena-container .arena .body .character-container.legal-target:hover {\\n              border-style: solid; }\\n          #combat-body-container .selected-arena-container .arena .body .character-container .character .character-image {\\n            height: 200px;\\n            width: 100%;\\n            background-size: 100% 100%; }\\n      #combat-body-container .selected-arena-container .arena .footer {\\n        flex: 0 0 auto;\\n        padding: 20px; }\\n        #combat-body-container .selected-arena-container .arena .footer .skills-container {\\n          display: flex;\\n          padding: 15px;\\n          background-color: #87583A; }\\n          #combat-body-container .selected-arena-container .arena .footer .skills-container .skill-container {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            padding: 10px;\\n            margin-right: 15px;\\n            background-color: #B77C57;\\n            cursor: pointer; }\\n            #combat-body-container .selected-arena-container .arena .footer .skills-container .skill-container .skill-image {\\n              height: 64px;\\n              width: 64px;\\n              background-size: 100% 100%; }\\n      #combat-body-container .selected-arena-container .arena .overlay {\\n        position: absolute;\\n        left: 5%;\\n        top: 5%;\\n        width: 90%;\\n        height: 90%;\\n        opacity: 0.7;\\n        background-color: black;\\n        z-index: 1000;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: space-around; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".flexbox {\\n  display: flex; }\\n\\n.flexbox-between {\\n  display: flex;\\n  justify-content: space-between; }\\n\\n.flexbox-column {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.flexbox-column-between {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between; }\\n\\n.button {\\n  background-color: #9999BB;\\n  border: 2px solid grey;\\n  display: inline-block;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  cursor: pointer; }\\n\\nbutton {\\n  padding: 10px;\\n  background-color: #3333FF;\\n  border: 1px solid black;\\n  cursor: pointer;\\n  color: white; }\\n  button:hover {\\n    background-color: #6666FF; }\\n  button:active {\\n    margin-top: 1px;\\n    margin-left: 1px; }\\n\\n.large-list-card {\\n  background-color: #BB9955;\\n  border: 2px solid grey;\\n  min-height: 150px;\\n  width: 600px;\\n  margin-bottom: 5px; }\\n\\n.progress-bar {\\n  width: 100%;\\n  height: 10px;\\n  background-color: #141414;\\n  border: 1px solid grey; }\\n\\n.progress-bar .bar {\\n  height: 100%;\\n  background-color: #9999BB; }\\n\\n.draggable-container {\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#map-body-container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex; }\\n  #map-body-container .info-panel {\\n    width: 300px;\\n    background-color: #87583A;\\n    border-right: 1px solid black; }\\n    #map-body-container .info-panel .heroes {\\n      display: flex; }\\n      #map-body-container .info-panel .heroes .hero {\\n        position: relative; }\\n        #map-body-container .info-panel .heroes .hero .checkmark {\\n          position: absolute;\\n          height: 64px;\\n          width: 64px;\\n          bottom: 0;\\n          right: 0; }\\n  #map-body-container .map-container {\\n    flex: 1 1 auto;\\n    background-color: #B77C57; }\\n    #map-body-container .map-container .map {\\n      position: relative; }\\n      #map-body-container .map-container .map .arena-type {\\n        position: absolute;\\n        background-size: 100% 100%;\\n        border: 1px solid black;\\n        cursor: pointer;\\n        opacity: 0.7; }\\n        #map-body-container .map-container .map .arena-type:hover {\\n          opacity: 1; }\\n        #map-body-container .map-container .map .arena-type .header {\\n          display: flex;\\n          justify-content: space-between; }\\n          #map-body-container .map-container .map .arena-type .header .name, #map-body-container .map-container .map .arena-type .header .level {\\n            padding: 5px;\\n            border-bottom: 1px solid black;\\n            background-color: #CEA68D;\\n            color: black; }\\n          #map-body-container .map-container .map .arena-type .header .name {\\n            border-right: 1px solid black; }\\n          #map-body-container .map-container .map .arena-type .header .level {\\n            border-left: 1px solid black; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  background-color: #141414;\\n  color: #f2f2f2;\\n  user-select: none; }\\n\\n/* Header */\\n#header {\\n  width: 100%;\\n  height: 50px;\\n  background-color: #303030;\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 5px; }\\n  #header .title-container {\\n    display: flex;\\n    flex-direction: column; }\\n    #header .title-container .title {\\n      font-size: 25px; }\\n    #header .title-container .version-number {\\n      font-size: 10px; }\\n  #header .btn-new-game {\\n    padding-top: 8px; }\\n\\n/* Body */\\n#body {\\n  padding: 10px; }\\n\\n.tabs {\\n  display: flex;\\n  margin-bottom: 1px; }\\n  .tabs .tab {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: 15px;\\n    cursor: pointer;\\n    user-select: none;\\n    background-color: #B77C57; }\\n    .tabs .tab.active {\\n      background-color: #87583A; }\\n    .tabs .tab:hover:not(.active) {\\n      background-color: #996342; }\\n\\n.tab-body {\\n  width: 1400px;\\n  height: 800px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","export class NumberFormattingService {\r\n    private postfixes = ['', 'k', 'm', 'b'];\r\n    public formatInteger(n: number): string {\r\n        return this.format(n, 0);\r\n    }\r\n    public formatDecimal(n: number): string {\r\n        return this.format(n, 2);\r\n    }\r\n    public format(number: number, maxDecimals?: number, minDecimals?: number, ceil?: boolean): string {\r\n        if (maxDecimals === undefined) {\r\n            maxDecimals = 2;\r\n        }\r\n        if (minDecimals === undefined) {\r\n            minDecimals = maxDecimals;\r\n        }\r\n        if (ceil === undefined) {\r\n            ceil = false;\r\n        }\r\n\r\n        let amountOfTimesTheNumberCanBeDividedBy1000 = 0;\r\n        while(number > 10000) {\r\n            number /= 1000;\r\n            amountOfTimesTheNumberCanBeDividedBy1000++;\r\n        }\r\n\r\n        const multiplier = Math.pow(10, maxDecimals);\r\n        let roundedNumber;\r\n        if (ceil) {\r\n            number -= 0.0001; // Floating point fix.\r\n            roundedNumber = Math.ceil(number * multiplier) / multiplier;\r\n        } else {\r\n            number += 0.0001; // Floating point fix.\r\n            roundedNumber = Math.floor(number * multiplier) / multiplier;\r\n        }\r\n\r\n        let numberString: string;\r\n        if (minDecimals) {\r\n            numberString = roundedNumber.toFixed(minDecimals);\r\n        } else {\r\n            numberString = roundedNumber.toString();\r\n        }\r\n\r\n        const postfix = this.postfixes[amountOfTimesTheNumberCanBeDividedBy1000];\r\n        if (postfix) {\r\n            numberString += postfix;\r\n        }\r\n        return numberString;\r\n    }\r\n}","export class ObservableSubscription {\r\n    public observer: object;\r\n    public callback: (...args: any[]) => void;\r\n    public constructor (observer: object, callback: (...args: any[]) => void) {\r\n        this.observer = observer;\r\n        this.callback = callback;\r\n    }\r\n}","import { ObservableSubscription } from \"./observable-subscription\";\r\n\r\nexport interface Observable {\r\n    addSubscription(observer: object, callback: () => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(): void;\r\n}\r\nexport interface ObservableWith1Argument<T0> {\r\n    addSubscription(observer: object, callback: (p0: T0) => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(p0: T0): void;\r\n}\r\nexport interface ObservableWith2Arguments<T0, T1> {\r\n    addSubscription(observer: object, callback: (p0: T0, p1: T1) => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(p0: T0, p1: T1): void;\r\n}\r\n\r\nexport class ObservableFactory {\r\n    private subscriptions: ObservableSubscription[] = [];\r\n\r\n    private constructor() {}\r\n\r\n    public static create(): Observable {\r\n        return new ObservableFactory();\r\n    } \r\n    public static createWith1Argument<T0>(): ObservableWith1Argument<T0> {\r\n        return new ObservableFactory();\r\n    } \r\n    public static createWith2Arguments<T0, T1>(): ObservableWith2Arguments<T0, T1> {\r\n        return new ObservableFactory();\r\n    }\r\n\r\n    public addSubscription (observer: object, callback: (...args: any[]) => void): void {\r\n        const subscription = new ObservableSubscription(observer, callback);\r\n        this.subscriptions.push (subscription);\r\n    }\r\n\r\n    public removeSubscription (observer: object): void {\r\n        this.subscriptions = this.subscriptions.filter(s => s.observer !== observer);\r\n    }\r\n\r\n    public notify (...args: any[]): void {\r\n        this.subscriptions.forEach(subscription => subscription.callback.apply(subscription.observer, args));\r\n    }\r\n}","import { DBGame } from \"../game-state/db-game\";\r\nimport { Hero } from \"./heroes/hero\";\r\nimport { ArenaType } from \"./arenas/arena-type\";\r\nimport { DBArena } from \"../game-state/db-arena\";\r\nimport { Arena } from \"./arenas/arena\";\r\n\r\nexport class Game {\r\n    private dbModel: DBGame;\r\n    public heroes: Hero[];\r\n    public arenas: Arena[];\r\n\r\n    public static load(dbGame: DBGame): Game {\r\n        const game = new Game();\r\n        game.dbModel = dbGame;\r\n        game.heroes = dbGame.heroes.map(Hero.load);\r\n        game.arenas = dbGame.arenas.map(Arena.load);\r\n        return game;\r\n    }\r\n\r\n    public update (dTime: number): void {\r\n        this.arenas.forEach(arena => arena.update(dTime));\r\n    }\r\n\r\n    public addHero(hero: Hero): void {\r\n        this.dbModel.heroes.push(hero.dbModel);\r\n        this.heroes.push(hero);\r\n    }\r\n\r\n    public spawnArena(type: ArenaType, level: number, heroes: Hero[]): Arena {\r\n        const dbRooms = type.createDbRooms(level);\r\n        const dbArena = <DBArena> {\r\n            typeKey: type.key,\r\n            startTime: new Date(),\r\n            level: level,\r\n            rooms: dbRooms,\r\n            currentRoomIndex: 0\r\n        };\r\n        const arena = Arena.load(dbArena);\r\n\r\n        this.dbModel.arenas.push(arena.dbModel);\r\n        this.arenas.push(arena);\r\n\r\n        arena.rooms[0].setHeroes(heroes);\r\n\r\n        return arena;\r\n    }\r\n}","import { Monster } from \"../monsters/monster\";\r\nimport { DBArenaRoomEncounter } from \"../../game-state/db-arena-room-encounter\";\r\n\r\nexport class ArenaRoomEncounter {\r\n    public dbModel: DBArenaRoomEncounter;\r\n    public monsters: Monster[];\r\n\r\n    public static load (dbArenaRoomEncounter: DBArenaRoomEncounter): ArenaRoomEncounter {\r\n        const arenaRoomEncounter = new ArenaRoomEncounter();\r\n        arenaRoomEncounter.dbModel = dbArenaRoomEncounter;\r\n        arenaRoomEncounter.monsters = arenaRoomEncounter.dbModel.monsters.map(Monster.load);\r\n        return arenaRoomEncounter;\r\n    }\r\n}\r\n","import { DBArenaRoom } from \"../../game-state/db-arena-room\";\r\nimport { Hero } from \"../heroes/hero\";\r\nimport { ArenaRoomEncounter } from \"./arena-room-encounter\";\r\n\r\nexport class ArenaRoom {\r\n    public dbModel: DBArenaRoom;\r\n    public encounters: ArenaRoomEncounter[];\r\n    public heroes: Hero[];\r\n\r\n    public get currentEncounter(): ArenaRoomEncounter {\r\n        return this.encounters[this.dbModel.currentEncounterIndex];\r\n    }\r\n\r\n    public get currentEncounterIndex(): number { return this.dbModel.currentEncounterIndex; }\r\n\r\n    public get hasPlayerLost(): boolean { return this.heroes.every(hero => !hero.isAlive); }\r\n\r\n    public static load (dbArenaRoom: DBArenaRoom): ArenaRoom {\r\n        const arenaRoom = new ArenaRoom();\r\n        arenaRoom.dbModel = dbArenaRoom;\r\n        arenaRoom.encounters = arenaRoom.dbModel.encounters.map(ArenaRoomEncounter.load);\r\n        return arenaRoom;\r\n    }\r\n\r\n    public setHeroes(heroes: Hero[]): void {\r\n        this.heroes = heroes;\r\n        this.dbModel.heroIds = this.heroes.map(hero => hero.dbModel.id);\r\n    }\r\n}\r\n","import { ArenaType } from './arena-type';\r\nimport { DBMonster } from '../../game-state/db-monster';\r\nimport { MonsterType } from '../monsters/monster-type';\r\nimport { DBArenaRoom } from '../../game-state/db-arena-room';\r\nimport { WeightedValue } from '../shared/weighted-value';\r\nimport { GameServices } from '../game-services';\r\nimport { DBArenaRoomEncounter } from '../../game-state/db-arena-room-encounter';\r\n\r\nexport class ArenaTypeService {\r\n    public allArenaTypes: ArenaType[];\r\n    public initialize (): void {\r\n        this.allArenaTypes = [\r\n             ArenaType.create({\r\n                key: 'forest',\r\n                name: 'Forest',\r\n                description: 'Easy monsters!',\r\n                imageName: 'forest.png',\r\n                position: {x: 0, y: 0},\r\n                level: 1,\r\n                createDbRooms: (level: number) => {\r\n                    return this.createDbRooms({\r\n                        level: level,\r\n                        amountOfRooms: 10,\r\n                        amountOfEncountersInEachRoom: 5,\r\n                        amountOfMonstersInEachEncounter: 2,\r\n                        monsterTypes: [\r\n                            {\r\n                                weight: 20,\r\n                                value: GameServices.monsterTypes.wolf\r\n                            },\r\n                            {\r\n                                weight: 10,\r\n                                value: GameServices.monsterTypes.snake\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            }),\r\n            ArenaType.create({\r\n                key: 'brushlands',\r\n                name: 'Brushlands',\r\n                description: 'Also easy monsters!',\r\n                imageName: 'brushlands.png',\r\n                position: {x: 1, y: 0},\r\n                level: 5,\r\n                createDbRooms: (level: number) => {\r\n                    return this.createDbRooms({\r\n                        level: level,\r\n                        amountOfRooms: 10,\r\n                        amountOfEncountersInEachRoom: 5,\r\n                        amountOfMonstersInEachEncounter: 2,\r\n                        monsterTypes: [\r\n                            {\r\n                                weight: 20,\r\n                                value: GameServices.monsterTypes.wolf\r\n                            },\r\n                            {\r\n                                weight: 10,\r\n                                value: GameServices.monsterTypes.snake\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            })\r\n        ];\r\n    }\r\n\r\n    public getByKey(key: string): ArenaType {\r\n        return this.allArenaTypes.find(type => type.key === key);\r\n    }\r\n\r\n    private createDbRooms(settings: {\r\n        level: number,\r\n        amountOfRooms: number,\r\n        amountOfEncountersInEachRoom: number,\r\n        amountOfMonstersInEachEncounter: number,\r\n        monsterTypes: WeightedValue<MonsterType>[]\r\n    }): DBArenaRoom[] {\r\n        const dbArenaRooms: DBArenaRoom[] = [];\r\n        for (let currentRoomIndex = 0; currentRoomIndex<settings.amountOfRooms; currentRoomIndex++) {\r\n            const dbEncounters: DBArenaRoomEncounter[] = [];\r\n            for (let currentEncounterIndex = 0; currentEncounterIndex < settings.amountOfEncountersInEachRoom; currentEncounterIndex++) {\r\n                const dbMonsters: DBMonster[] = [];\r\n                for (let currentMonsterIndex = 0; currentMonsterIndex < settings.amountOfMonstersInEachEncounter; currentMonsterIndex++) {\r\n                    const monsterType = GameServices.random.getWeightedValue(settings.monsterTypes);\r\n                    const dbMonster = GameServices.monsters.createDBMonster(settings.level, monsterType);\r\n                    dbMonsters.push(dbMonster);\r\n                }\r\n                const dbEncounter = <DBArenaRoomEncounter> {\r\n                    monsters: dbMonsters\r\n                };\r\n                dbEncounters.push(dbEncounter);\r\n            }\r\n            const dbArenaRoom = <DBArenaRoom> {\r\n                currentEncounterIndex: 0,\r\n                heroIds: [],\r\n                encounters: dbEncounters\r\n            };\r\n            dbArenaRooms.push(dbArenaRoom);\r\n        }\r\n        return dbArenaRooms;\r\n    }\r\n}\r\n","import { Vector2 } from \"../../common/vector2\";\r\nimport { DBArenaRoom } from \"../../game-state/db-arena-room\";\r\n\r\nexport class ArenaType {\r\n    public key: string;\r\n    public name: string;\r\n    public description: string;\r\n    public imageName: string;\r\n    public position: Vector2;\r\n    public level: number;\r\n    public createDbRooms: (level: number) => DBArenaRoom[];\r\n\r\n    public static create(options: {\r\n        key: string,\r\n        name: string,\r\n        description: string,\r\n        imageName: string,\r\n        position: Vector2,\r\n        level: number,\r\n        createDbRooms: (level: number) => DBArenaRoom[]\r\n    }): ArenaType {\r\n        const arenaType = new ArenaType();\r\n        arenaType.key = options.key;\r\n        arenaType.name = options.name;\r\n        arenaType.description = options.description;\r\n        arenaType.imageName = options.imageName;\r\n        arenaType.position = options.position;\r\n        arenaType.level = options.level;\r\n        arenaType.createDbRooms = options.createDbRooms;\r\n        return arenaType;\r\n    }\r\n}","import { DBArena } from \"../../game-state/db-arena\";\r\nimport { ArenaRoom } from \"./arena-room\";\r\nimport { ArenaType } from \"./arena-type\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { Character } from \"./character\";\r\nimport { Skill } from \"../skills/skill\";\r\nimport { WeightedValue } from \"../shared/weighted-value\";\r\nimport { SkillType } from \"../skills/skill-type\";\r\nimport { Hero } from \"../heroes/hero\";\r\nimport { Observable, ObservableFactory } from \"../../common/observable\";\r\n\r\nexport class Arena {\r\n    public dbModel: DBArena;\r\n    public type: ArenaType;\r\n    public rooms: ArenaRoom[];\r\n\r\n    public onPlayerLose: Observable = ObservableFactory.create();\r\n\r\n    public get currentRoom(): ArenaRoom { return this.rooms[this.dbModel.currentRoomIndex]; }\r\n    public get currentRoomIndex(): number { return this.dbModel.currentRoomIndex; }\r\n    public get level(): number { return this.dbModel.level; }\r\n    public get hasPlayerLost(): boolean { return this.currentRoom.hasPlayerLost; }\r\n\r\n    public static load (dbArena: DBArena): Arena {\r\n        const arena = new Arena();\r\n        arena.dbModel = dbArena;\r\n\r\n        arena.type = GameServices.arenaTypes.getByKey(dbArena.typeKey);\r\n\r\n        arena.rooms = dbArena.rooms.map(ArenaRoom.load);\r\n        return arena;\r\n    }\r\n\r\n    public update(dTime: number): void {\r\n        if (!this.hasPlayerLost) {\r\n            this.currentRoom.heroes.forEach(hero => {\r\n                hero.skills.forEach(skill => skill.reduceCooldown(dTime));\r\n            });\r\n    \r\n            this.currentRoom.currentEncounter.monsters.forEach(monster => {\r\n                if (monster.isAlive && !this.hasPlayerLost) {\r\n                    // Update cooldowns\r\n                    monster.skills.forEach(skill => skill.reduceCooldown(dTime));\r\n        \r\n                    // Find and use a ready skill if possible\r\n                    const readySkills = monster.skills.filter(skill => skill.isReady);\r\n                    if (readySkills.length > 0) {\r\n                        const weightedReadySkills = readySkills.map(skill => {\r\n                            const weightedSkillType = monster.type.skillTypes.find(wSkillType => wSkillType.value === skill.type);\r\n                            return <WeightedValue<Skill>> {\r\n                                weight: weightedSkillType.weight,\r\n                                value: skill\r\n                            };\r\n                        });\r\n            \r\n                        const skillToUse = GameServices.random.getWeightedValue(weightedReadySkills);\r\n                        const legalTargets = this.getLegalTargets(monster, skillToUse.type);\r\n                        if (skillToUse.type.requiresTarget) {\r\n                            if (legalTargets.length > 0) {\r\n                                const target = GameServices.random.getRandomElement(legalTargets);\r\n                                this.useSkill(monster, target, skillToUse);\r\n                            }\r\n                        } else {\r\n                            this.useSkill(monster, null, skillToUse);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public getLegalTargets(user: Character, skillType: SkillType): Character[] {\r\n        const legalTargets = [];\r\n        const isHero = user instanceof Hero;\r\n        const heroes = this.currentRoom.heroes.filter(hero => hero.isAlive);\r\n        const monsters = this.currentRoom.currentEncounter.monsters.filter(monster => monster.isAlive);\r\n        const friends = isHero ? heroes : monsters;\r\n        const enemies = isHero ? monsters : heroes;\r\n\r\n        if (skillType.canTargetEnemy) {\r\n            legalTargets.push(...enemies);\r\n        }\r\n        if (skillType.canTargetFriend) {\r\n            legalTargets.push(...friends);\r\n        }\r\n        \r\n        return legalTargets;\r\n    }\r\n\r\n    public useSkill(user: Character, target: Character, skill: Skill): void {\r\n        if (skill.remainingCooldown === 0) {\r\n            if (!this.hasPlayerLost) {\r\n                skill.type.effect(user, target, this.currentRoom);\r\n                skill.resetCooldown();\r\n                if (this.hasPlayerLost) {\r\n                    this.onPlayerLose.notify();\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Can't use \" + skill.type.name + \" because it is not ready.\");\r\n        }\r\n    }\r\n}\r\n","import { AttributeType } from \"./attribute-type\";\r\n\r\nexport class AttributeTypeService {\r\n    public attackSpeed: AttributeType;\r\n    public attackDamage: AttributeType;\r\n    public attackCriticalChance: AttributeType;\r\n    public attackCriticalMultiplier: AttributeType;\r\n    public armor: AttributeType;\r\n    public magicResistance: AttributeType;\r\n    public maximumHealth: AttributeType;\r\n    public maximumEnergy: AttributeType;\r\n\r\n    public initialize () {\r\n        this.attackSpeed = <AttributeType> {\r\n            key: 'attack-speed',\r\n            name: 'Attack speed',\r\n            description: 'More attack speed decreases the time needed to recover after performing an attack.'\r\n        };\r\n        this.attackDamage = <AttributeType> {\r\n            key: 'attack-damage',\r\n            name: 'Attack damage',\r\n            description: 'Increases the damage dealt by attacks.'\r\n        };\r\n        this.attackCriticalChance = <AttributeType> {\r\n            key: 'attack-critical-chance',\r\n            name: 'Critical chance',\r\n            description: 'The chance to deal a critical strike with attacks.'\r\n        };\r\n        this.attackCriticalMultiplier = <AttributeType> {\r\n            key: 'attack-critical-multiplier',\r\n            name: 'Critical multiplier',\r\n            description: 'How much damage a critical hit does'\r\n        };\r\n        this.armor = <AttributeType> {\r\n            key: 'armor',\r\n            name: 'Armor',\r\n            description: 'Decreases the physical damage taken.'\r\n        };\r\n        this.magicResistance = <AttributeType> {\r\n            key: 'magic-resistance',\r\n            name: 'Magic Resistance',\r\n            description: 'Decreases the magic damage taken.'\r\n        };\r\n        this.maximumHealth = <AttributeType> {\r\n            key: 'maximum-health',\r\n            name: 'Maximum Health',\r\n            description: 'The character loses health whenever it takes any damage.'\r\n        };\r\n        this.maximumEnergy = <AttributeType> {\r\n            key: 'maximum-energy',\r\n            name: 'Maximum Energy',\r\n            description: 'Some skills cost energy.'\r\n        };\r\n    }\r\n}\r\n","import { Attribute } from \"./attribute\";\r\nimport { ValueContainer } from \"../shared/value-container\";\r\nimport { AttributeType } from \"./attribute-type\";\r\nimport { GameServices } from \"../game-services\";\r\n\r\nexport class Attributes {\r\n    public attackSpeed: ValueContainer;\r\n    public attackDamage: ValueContainer;\r\n    public attackCriticalChance: ValueContainer;\r\n    public attackCriticalMultiplier: ValueContainer;\r\n    public armor: ValueContainer;\r\n    public magicResistance: ValueContainer;\r\n    public maximumHealth: ValueContainer;\r\n    public maximumEnergy: ValueContainer;\r\n\r\n    public all: Attribute[];\r\n\r\n    public get (type: AttributeType): Attribute {\r\n        return this.all.find(attr => attr.type === type);\r\n    }\r\n\r\n    public static create (attributes?: {\r\n        attackSpeed?: number,\r\n        attackDamage?: number,\r\n        attackCriticalChance?: number,\r\n        attackCriticalMultiplier?: number,\r\n        armor?: number,\r\n        magicResistance?: number,\r\n        maximumHealth?: number,\r\n        maximumEnergy?: number\r\n    }): Attributes {\r\n        const attributeTypesService = GameServices.attributeTypes;\r\n\r\n        const newAttributes = new Attributes();\r\n\r\n        if (!attributes) {\r\n            attributes = {};\r\n        }\r\n        newAttributes.attackSpeed = new ValueContainer(attributes.attackSpeed);\r\n        newAttributes.attackDamage = new ValueContainer(attributes.attackDamage);\r\n        newAttributes.attackCriticalChance = new ValueContainer(attributes.attackCriticalChance);\r\n        newAttributes.attackCriticalMultiplier = new ValueContainer(attributes.attackCriticalMultiplier);\r\n        newAttributes.armor = new ValueContainer(attributes.armor);\r\n        newAttributes.magicResistance = new ValueContainer(attributes.magicResistance);\r\n        newAttributes.maximumHealth = new ValueContainer(attributes.maximumHealth);\r\n        newAttributes.maximumEnergy = new ValueContainer(attributes.maximumEnergy);\r\n\r\n        newAttributes.all = [\r\n            <Attribute> {\r\n                amount: newAttributes.attackSpeed,\r\n                type: attributeTypesService.attackSpeed\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.attackDamage,\r\n                type: attributeTypesService.attackDamage\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.attackCriticalChance,\r\n                type: attributeTypesService.attackCriticalChance\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.attackCriticalMultiplier,\r\n                type: attributeTypesService.attackCriticalMultiplier\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.armor,\r\n                type: attributeTypesService.armor\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.magicResistance,\r\n                type: attributeTypesService.magicResistance\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.maximumHealth,\r\n                type: attributeTypesService.maximumHealth\r\n            },\r\n            <Attribute> {\r\n                amount: newAttributes.maximumEnergy,\r\n                type: attributeTypesService.maximumEnergy\r\n            }\r\n        ];\r\n\r\n        return newAttributes;\r\n    }\r\n}\r\n","import { Game } from \"./Game\";\r\nimport { GameRunner } from \"./game-runner\";\r\nimport { DBGame } from \"../game-state/db-game\";\r\nimport { GameServices } from \"./game-services\";\r\nimport { DBArena } from \"../game-state/db-arena\";\r\nimport { ItemBodyLocation } from \"./items/item-body-location\";\r\nimport { PassiveAbilityArguments } from \"./items/passive-ability-arguments\";\r\n\r\nexport class GameController {\r\n    public game: Game;\r\n    public gameRunner: GameRunner;\r\n\r\n    public initialize(): void {\r\n        this.gameRunner = new GameRunner();\r\n    }\r\n\r\n    public newGame() {\r\n        const dbGame = <DBGame> {\r\n            version: GameServices.version.currentVersion,\r\n            startTime: new Date(),\r\n            heroes: [{\r\n                id: 1,\r\n                typeKey: 'warrior',\r\n                name: 'Heltefar',\r\n                level: 1,\r\n                experience: 0,\r\n                currentHealth: undefined,\r\n                isAlive: true,\r\n                skills: [{\r\n                    typeKey: 'basic-attack',\r\n                    remainingCooldown: 0\r\n                }],\r\n                items: [{\r\n                    key: ItemBodyLocation.mainHand,\r\n                    value: {\r\n                        id: 0,\r\n                        typeKey: 'broad-sword',\r\n                        level: 1,\r\n                        implicitPassiveAbilities: [{\r\n                            typeKey: 'increased-attack-damage',\r\n                            args: {\r\n                                'attack-damage': 4\r\n                            }\r\n                        }],\r\n                        explicitPassiveAbilities: []\r\n                    }\r\n                }]\r\n            }],\r\n            arenas: [],\r\n            items: []\r\n        };\r\n\r\n        this.game = Game.load(dbGame);\r\n\r\n        this.gameRunner.beginUpdating(this.game);\r\n    }\r\n}\r\n","import { Game } from \"./Game\";\r\nimport { Observable, ObservableFactory } from \"../common/observable\";\r\n\r\nexport class GameRunner {\r\n    private updateFrequency: number = 100;\r\n    private maxTimeToResumePerUpdate: number = 24 * 60 * 60 * 1000;\r\n\r\n    private updateIntervalID: number;\r\n    private lastUpdateAsNumber: number = Date.now();\r\n\r\n    private game: Game;\r\n    \r\n    public onUpdate: Observable = ObservableFactory.create();\r\n\r\n    public beginUpdating(game: Game): void {\r\n        this.game = game;\r\n\r\n        if (this.updateIntervalID) {\r\n            clearInterval(this.updateIntervalID);\r\n        }\r\n\r\n        this.updateIntervalID = setInterval(() => {\r\n            this.update();\r\n        }, this.updateFrequency);\r\n    }\r\n\r\n    private update (): void {\r\n        let timeSinceLastUpdate = Date.now() - this.lastUpdateAsNumber;\r\n\r\n        // Cap catch up duration\r\n        if (timeSinceLastUpdate > this.maxTimeToResumePerUpdate) {\r\n            timeSinceLastUpdate = this.maxTimeToResumePerUpdate;\r\n            this.lastUpdateAsNumber = Date.now() - this.maxTimeToResumePerUpdate;\r\n        }\r\n\r\n        // Update until caught up\r\n        while (timeSinceLastUpdate > this.updateFrequency) {\r\n            timeSinceLastUpdate -= this.updateFrequency;\r\n            this.lastUpdateAsNumber = this.lastUpdateAsNumber + this.updateFrequency;\r\n\r\n            this.game.update(this.updateFrequency);\r\n        }\r\n\r\n        this.onUpdate.notify();\r\n    }\r\n}\r\n","import { AttributeTypeService } from \"./attributes/attribute-type-service\";\r\nimport { VersionService } from \"./version-service\";\r\nimport { RandomService } from \"./shared/random-service\";\r\nimport { SkillTypeService } from \"./skills/skill-type-service\";\r\nimport { MonsterTypeService } from \"./monsters/monster-type-service\";\r\nimport { MonsterService } from \"./monsters/monster-service\";\r\nimport { ArenaTypeService } from \"./arenas/arena-type-service\";\r\nimport { Game } from \"./game\";\r\nimport { GameController } from \"./game-controller\";\r\nimport { HeroTypeService } from \"./heroes/hero-type-service\";\r\nimport { NumberFormattingService } from \"../common/number-formatting-service\";\r\nimport { PassiveAbilityTypeService } from \"./items/passive-ability-type-service\";\r\nimport { PassiveAbilityGeneratorService } from \"./items/passive-ability-generator-service\";\r\nimport { ItemTypeService } from \"./items/item-type-service\";\r\n\r\nexport class GameServices {\r\n    public static random: RandomService;\r\n    public static numberFormatting: NumberFormattingService\r\n\r\n    public static arenaTypes: ArenaTypeService;\r\n    public static attributeTypes: AttributeTypeService;\r\n    public static heroTypes: HeroTypeService;\r\n    public static monsterTypes: MonsterTypeService;\r\n    public static monsters: MonsterService;\r\n    public static skillTypes: SkillTypeService;\r\n    public static passiveAbilityGenerators: PassiveAbilityGeneratorService;\r\n    public static passiveAbilityTypes: PassiveAbilityTypeService;\r\n    public static itemTypes: ItemTypeService;\r\n    \r\n    public static version: VersionService;\r\n    \r\n    public static currentGame: Game;\r\n    public static currentGameController: GameController;\r\n\r\n    private constructor () {};\r\n\r\n    public static initialize() {\r\n        GameServices.random = new RandomService();\r\n\r\n        GameServices.numberFormatting = new NumberFormattingService();\r\n\r\n        GameServices.arenaTypes = new ArenaTypeService();\r\n        GameServices.arenaTypes.initialize();\r\n\r\n        GameServices.attributeTypes = new AttributeTypeService();\r\n        GameServices.attributeTypes.initialize();\r\n        \r\n        GameServices.skillTypes = new SkillTypeService();\r\n        GameServices.skillTypes.initialize();\r\n\r\n        GameServices.heroTypes = new HeroTypeService();\r\n        GameServices.heroTypes.initialize();\r\n\r\n        GameServices.monsterTypes = new MonsterTypeService();\r\n        GameServices.monsterTypes.initialize();\r\n\r\n        GameServices.monsters = new MonsterService();\r\n\r\n        GameServices.passiveAbilityTypes = new PassiveAbilityTypeService();\r\n        GameServices.passiveAbilityTypes.initialize();\r\n\r\n        GameServices.passiveAbilityGenerators = new PassiveAbilityGeneratorService();\r\n        GameServices.passiveAbilityGenerators.initialize();\r\n\r\n        GameServices.itemTypes = new ItemTypeService();\r\n        GameServices.itemTypes.initialize();\r\n\r\n\r\n\r\n        GameServices.version = new VersionService();\r\n    }\r\n}\r\n","import { HeroType } from \"./hero-type\";\r\nimport { Attributes } from \"../attributes/attributes\";\r\n\r\nexport class HeroTypeService {\r\n    public warrior: HeroType;\r\n\r\n    public allHeroTypes: HeroType[];\r\n\r\n    public initialize () {\r\n        this.warrior = HeroType.create({\r\n            key: 'warrior',\r\n            name: 'Warrior',\r\n            description: 'Fights with brute force and no hesitation',\r\n            imageName: 'warrior.png',\r\n            attributesBase: Attributes.create({\r\n                attackDamage: 16,\r\n                attackSpeed: 0.8,\r\n                maximumHealth: 50\r\n            }),\r\n            attributesPerLevel: Attributes.create({\r\n                attackDamage: 2,\r\n                maximumHealth: 50\r\n            })\r\n        });\r\n\r\n        this.allHeroTypes = [\r\n            this.warrior\r\n        ];\r\n    }\r\n\r\n    public getByKey(key: string): HeroType {\r\n        return this.allHeroTypes.find(type => type.key === key);\r\n    }\r\n}","import { Attributes } from \"../attributes/attributes\";\r\n\r\nexport class HeroType {\r\n    public key: string;\r\n    public name: string;\r\n    public description: string;\r\n    public imageName: string;\r\n    public attributesBase: Attributes;\r\n    public attributesPerLevel: Attributes;\r\n\r\n    public static create (options: {\r\n        key: string,\r\n        name: string,\r\n        description: string,\r\n        imageName: string,\r\n        attributesBase: Attributes,\r\n        attributesPerLevel: Attributes\r\n    }): HeroType {\r\n        const heroType = new HeroType();\r\n        heroType.key = options.key;\r\n        heroType.name = options.name;\r\n        heroType.description = options.description;\r\n        heroType.imageName = options.imageName;\r\n        heroType.attributesBase = options.attributesBase;\r\n        heroType.attributesPerLevel = options.attributesPerLevel;\r\n        return heroType;\r\n    }\r\n}\r\n","import { Attributes } from \"../attributes/attributes\";\r\nimport { DBHero } from \"../../game-state/db-hero\";\r\nimport { Observable, ObservableFactory, ObservableWith1Argument } from \"../../common/observable\";\r\nimport { HeroType } from \"./hero-type\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { Skill } from \"../skills/skill\";\r\nimport { Item } from \"../items/item\";\r\nimport { ItemBodyLocation } from \"../items/item-body-location\";\r\nimport { KeyValuePair } from \"../shared/key-value-pair\";\r\nimport { DamageTakenEvent } from \"../monsters/damage-taken-event\";\r\nimport { DamageType } from \"../skills/damage-type\";\r\n\r\nexport class Hero {\r\n    public dbModel: DBHero;\r\n    public type: HeroType;\r\n    public attributes: Attributes;\r\n    private attributesFromLevel: Attributes;\r\n    public skills: Skill[];\r\n    public items: KeyValuePair<ItemBodyLocation, Item>[];\r\n\r\n    public onDeath: Observable = ObservableFactory.create();\r\n    public onDamageTaken: ObservableWith1Argument<DamageTakenEvent> = ObservableFactory.createWith1Argument();\r\n    public onLevelUp: ObservableWith1Argument<number> = ObservableFactory.createWith1Argument();\r\n\r\n    public get id(): number { return this.dbModel.id; }\r\n    public get name(): string { return this.dbModel.name; }\r\n    public get level(): number { return this.dbModel.level; }\r\n    public get isAlive(): boolean { return this.dbModel.isAlive; }\r\n\r\n    public get currentHealth(): number {\r\n        return this.dbModel.currentHealth;\r\n    }\r\n    public set currentHealth(value: number) {\r\n        this.dbModel.currentHealth = value;\r\n        if (this.dbModel.currentHealth <= 0 && !this.dbModel.isAlive) {\r\n            this.dbModel.isAlive = false;\r\n            this.onDeath.notify();\r\n        }\r\n    }\r\n\r\n    public static load (dbHero: DBHero): Hero {\r\n        const hero = new Hero();\r\n        hero.dbModel = dbHero;\r\n        hero.type = GameServices.heroTypes.getByKey(hero.dbModel.typeKey);\r\n\r\n        hero.attributes = Attributes.create();\r\n        hero.type.attributesBase.all.forEach(baseAttribute => \r\n            hero.attributes.get(baseAttribute.type).amount.setAdditiveValueContainer(baseAttribute.amount)\r\n        );\r\n        hero.attributesFromLevel = Attributes.create();\r\n        hero.type.attributesPerLevel.all.forEach(perLevelAttribute => {\r\n            const attributeFromLevelValueContainer = hero.attributesFromLevel.get(perLevelAttribute.type).amount;\r\n            attributeFromLevelValueContainer.setAdditiveValueContainer(perLevelAttribute.amount);\r\n            attributeFromLevelValueContainer.setMultiplicativeModifier(hero, hero.dbModel.level);\r\n            hero.onLevelUp.addSubscription(hero, level => attributeFromLevelValueContainer.setMultiplicativeModifier(hero, hero.dbModel.level));\r\n            hero.attributes.get(perLevelAttribute.type).amount.setAdditiveValueContainer(attributeFromLevelValueContainer);\r\n        });\r\n\r\n        hero.skills = hero.dbModel.skills.map(Skill.load);\r\n        hero.skills.forEach(skill => skill.type.setUpValueContainers(hero, skill));\r\n        hero.items = hero.dbModel.items.map(kvp => {\r\n            return {\r\n                key: kvp.key,\r\n                value: Item.load(kvp.value)\r\n            };\r\n        });\r\n        hero.items.forEach(kvp => \r\n            kvp.value.implicitPassiveAbilities.forEach(passiveAbility => \r\n                passiveAbility.type.applyEffect(passiveAbility, hero)));\r\n\r\n        if (dbHero.currentHealth === undefined) {\r\n            dbHero.currentHealth = hero.attributes.maximumHealth.value;\r\n        }\r\n        return hero;\r\n    }\r\n\r\n    public incrementLevel() {\r\n        this.dbModel.level++;\r\n        this.onLevelUp.notify(this.dbModel.level);\r\n    }\r\n\r\n    public takeDamage(amount: number, type: DamageType): void {\r\n        this.currentHealth -= amount;\r\n        if (this.currentHealth <= 0) {\r\n            this.currentHealth = 0;\r\n            this.dbModel.isAlive = false;\r\n        }\r\n        this.onDamageTaken.notify({\r\n            amount: amount,\r\n            type: type\r\n        });\r\n    }\r\n}\r\n","export enum ItemBodyLocation {\r\n    mainHand = 'main-hand',\r\n    offHand = 'off-hand',\r\n    head = 'head',\r\n    chest = 'chest',\r\n    legs = 'legs',\r\n    leftFoot = 'left-foot',\r\n    rightFoot = 'right-foot'\r\n}\r\n","export enum ItemCategory {\r\n    weapon,\r\n    shield,\r\n    head,\r\n    chest,\r\n    legs,\r\n    foot\r\n}","import { ItemType } from \"./item-type\";\r\nimport { ItemCategory } from \"./item-category\";\r\nimport { GameServices } from \"../game-services\";\r\n\r\nexport class ItemTypeService {\r\n    public broadSword: ItemType;\r\n    public towerShield: ItemType;\r\n    public wizardsHat: ItemType;\r\n\r\n    public allItemTypes: ItemType[];\r\n\r\n    public initialize(): void {\r\n        this.broadSword = ItemType.create({\r\n            key: 'broad-sword',\r\n            imageName: 'broad-sword.png',\r\n            name: 'Broad Sword',\r\n            category: ItemCategory.weapon,\r\n            implicitPassiveAbilityGenerators: [GameServices.passiveAbilityGenerators.increasedAttackDamage],\r\n            possibleExplicitPassiveAbilityGenerators: [\r\n                {weight: 500, value: GameServices.passiveAbilityGenerators.increasedArmor},\r\n                {weight: 500, value: GameServices.passiveAbilityGenerators.increasedAttackDamage}\r\n            ]\r\n        });\r\n\r\n        this.towerShield = ItemType.create({\r\n            key: 'tower-shield',\r\n            imageName: 'tower-shield.png',\r\n            name: 'Tower Shield',\r\n            category: ItemCategory.shield,\r\n            implicitPassiveAbilityGenerators: [GameServices.passiveAbilityGenerators.increasedArmor],\r\n            possibleExplicitPassiveAbilityGenerators: [\r\n                {weight: 500, value: GameServices.passiveAbilityGenerators.increasedArmor},\r\n                {weight: 500, value: GameServices.passiveAbilityGenerators.increasedAttackDamage}\r\n            ]\r\n        });\r\n\r\n        this.wizardsHat = ItemType.create({\r\n            key: 'wizards-hat',\r\n            imageName: 'wizards-hat.png',\r\n            name: \"Wizard's Hat\",\r\n            category: ItemCategory.head,\r\n            implicitPassiveAbilityGenerators: [GameServices.passiveAbilityGenerators.increasedAttackDamage],\r\n            possibleExplicitPassiveAbilityGenerators: [\r\n                {weight: 500, value: GameServices.passiveAbilityGenerators.increasedAttackDamage}\r\n            ]\r\n        });\r\n\r\n        this.allItemTypes = [\r\n            this.broadSword,\r\n            this.towerShield,\r\n            this.wizardsHat\r\n        ];\r\n    }\r\n\r\n    public getByKey(key: string): ItemType {\r\n        return this.allItemTypes.find(type => type.key === key);\r\n    }\r\n}\r\n","import { ItemCategory } from \"./item-category\";\r\nimport { PassiveAbilityGenerator } from \"./passive-ability-generator\";\r\nimport { WeightedValue } from \"../shared/weighted-value\";\r\n\r\nexport class ItemType {\r\n    public key: string;\r\n    public name: string;\r\n    public imageName: string;\r\n    public category: ItemCategory;\r\n    public implicitPassiveAbilityGenerators: PassiveAbilityGenerator[];\r\n    public possibleExplicitPassiveAbilityGenerators: WeightedValue<PassiveAbilityGenerator>[];\r\n\r\n    public static create (options: {\r\n        key: string,\r\n        name: string,\r\n        imageName: string,\r\n        category: ItemCategory,\r\n        implicitPassiveAbilityGenerators: PassiveAbilityGenerator[],\r\n        possibleExplicitPassiveAbilityGenerators: WeightedValue<PassiveAbilityGenerator>[]\r\n    }): ItemType {\r\n        const itemType = new ItemType();\r\n        itemType.key = options.key;\r\n        itemType.name = options.name;\r\n        itemType.imageName = options.imageName;\r\n        itemType.category = options.category;\r\n        itemType.implicitPassiveAbilityGenerators = options.implicitPassiveAbilityGenerators;\r\n        itemType.possibleExplicitPassiveAbilityGenerators = options.possibleExplicitPassiveAbilityGenerators;\r\n        return itemType;\r\n    }\r\n}","import { DBItem } from \"../../game-state/db-item\";\r\nimport { PassiveAbility } from \"./passive-ability\";\r\nimport { ItemType } from \"./item-type\";\r\nimport { GameServices } from \"../game-services\";\r\n\r\nexport class Item {\r\n    public dbModel: DBItem;\r\n    public type: ItemType;\r\n    public implicitPassiveAbilities: PassiveAbility[];\r\n    public explicitPassiveAbilities: PassiveAbility[];\r\n\r\n    public get level(): number { return this.dbModel.level; }\r\n\r\n    public static load (dbModel: DBItem): Item {\r\n        const newItem = new Item();\r\n        newItem.dbModel = dbModel;\r\n        newItem.type = GameServices.itemTypes.getByKey(dbModel.typeKey);\r\n        newItem.implicitPassiveAbilities = dbModel.implicitPassiveAbilities.map(PassiveAbility.load);\r\n        newItem.explicitPassiveAbilities = dbModel.explicitPassiveAbilities.map(PassiveAbility.load);\r\n        return newItem;\r\n    }\r\n}","export enum PassiveAbilityArgumentType {\r\n    integer,\r\n    decimal,\r\n    percentage\r\n}","import { PassiveAbilityGenerator } from \"./passive-ability-generator\";\r\nimport { DBPassiveAbility } from \"../../game-state/db-passive-ability\";\r\nimport { PassiveAbilityType } from \"./passive-ability-type\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { PassiveAbilityArguments } from \"./passive-ability-arguments\";\r\n\r\nexport class PassiveAbilityGeneratorService {\r\n    public increasedArmor: PassiveAbilityGenerator;\r\n    public increasedAttackDamage: PassiveAbilityGenerator;\r\n    public initialize(): void {\r\n        this.increasedArmor = this.createGeneratorWithSingleIntegerArgument({\r\n            abilityType: GameServices.passiveAbilityTypes.increasedArmor,\r\n            argumentKey: 'armor',\r\n            min: 2,\r\n            max: 6\r\n        });\r\n\r\n        this.increasedAttackDamage = this.createGeneratorWithSingleIntegerArgument({\r\n            abilityType: GameServices.passiveAbilityTypes.increasedAttackDamage,\r\n            argumentKey: 'attack-damage',\r\n            min: 5,\r\n            max: 10\r\n        });\r\n    }\r\n\r\n    private createGeneratorWithSingleIntegerArgument (options: { \r\n        abilityType: PassiveAbilityType, \r\n        argumentKey: string, \r\n        min: number, \r\n        max: number\r\n    }): PassiveAbilityGenerator {\r\n        return PassiveAbilityGenerator.create({\r\n            generateDbAbility: (itemLevel) => {\r\n                const actualMin = options.min + itemLevel;\r\n                const actualMax = options.max + itemLevel;\r\n                const actual = GameServices.random.randomInteger(actualMin, actualMax);\r\n                const args: PassiveAbilityArguments = {};\r\n                args[options.argumentKey] = actual;\r\n\r\n                return <DBPassiveAbility> {\r\n                    typeKey: options.abilityType.key,\r\n                    args: args\r\n                };\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { DBPassiveAbility } from \"../../game-state/db-passive-ability\";\r\n\r\nexport class PassiveAbilityGenerator {\r\n    public generateDbAbility: (itemLevel: number) => DBPassiveAbility;\r\n\r\n    public static create(options: {\r\n        generateDbAbility: (itemLevel: number) => DBPassiveAbility\r\n    }): PassiveAbilityGenerator {\r\n        const generator = new PassiveAbilityGenerator();\r\n        generator.generateDbAbility = options.generateDbAbility;\r\n        return generator;\r\n    }\r\n}\r\n","import { PassiveAbilityType } from \"./passive-ability-type\";\r\nimport { PassiveAbility } from \"./passive-ability\";\r\nimport { PassiveAbilityArgumentType } from \"./passive-ability-argument-type\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { Character } from \"../arenas/character\";\r\n\r\nexport class PassiveAbilityTypeService {\r\n    public allPassiveAbilityTypes: PassiveAbilityType[];\r\n\r\n    public increasedAttackDamage: PassiveAbilityType;\r\n    public increasedArmor: PassiveAbilityType;\r\n\r\n    public initialize () {\r\n        this.increasedAttackDamage = PassiveAbilityType.create({\r\n            key: 'increased-attack-damage',\r\n            argumentTypes: {\r\n                'attack-damage': PassiveAbilityArgumentType.integer\r\n            },\r\n            getDescription: (ability: PassiveAbility) => {\r\n                return `Increases attack damage by ${this.printArgument(ability, 'attack-damage')}`;\r\n            },\r\n            applyEffect: (ability: PassiveAbility, owner: Character) => {\r\n                const increase = ability.args['attack-damage'];\r\n                owner.attributes.attackDamage.setAdditiveModifier(ability, increase);\r\n            },\r\n            removeEffect: (ability: PassiveAbility, owner: Character) => {\r\n                owner.attributes.attackDamage.removeAllModifiers(ability);\r\n            }\r\n        });\r\n\r\n        this.increasedArmor = PassiveAbilityType.create({\r\n            key: 'increased-armor',\r\n            argumentTypes: {\r\n                'armor': PassiveAbilityArgumentType.integer\r\n            },\r\n            getDescription: (ability: PassiveAbility) => {\r\n                return `Increases armor by ${this.printArgument(ability, 'armor')}`;\r\n            },\r\n            applyEffect: (ability: PassiveAbility, owner: Character) => {\r\n                const increase = ability.args['armor'];\r\n                owner.attributes.armor.setAdditiveModifier(ability, increase);\r\n            },\r\n            removeEffect: (ability: PassiveAbility, owner: Character) => {\r\n                owner.attributes.armor.removeAllModifiers(ability);\r\n            }\r\n        });\r\n\r\n        this.allPassiveAbilityTypes = [\r\n            this.increasedAttackDamage,\r\n            this.increasedArmor\r\n        ];\r\n    }\r\n\r\n    private printArgument(ability: PassiveAbility, argumentKey: string): string {\r\n        const argumentType = ability.type.argumentTypes[argumentKey];\r\n        const argumentValue = ability.args[argumentKey];\r\n        switch(argumentType) {\r\n            case PassiveAbilityArgumentType.decimal:\r\n                return GameServices.numberFormatting.formatDecimal(argumentValue as number);\r\n            case PassiveAbilityArgumentType.integer:\r\n                return GameServices.numberFormatting.formatInteger(argumentValue as number);\r\n            case PassiveAbilityArgumentType.percentage:\r\n                const argumentValueAsPercent = (argumentValue as number) * 100;\r\n                return GameServices.numberFormatting.formatDecimal(argumentValueAsPercent);\r\n            default:\r\n                throw new Error('Unknown argument type: ' + argumentType);\r\n        }\r\n    }\r\n\r\n    public getByKey(key: string): PassiveAbilityType {\r\n        return this.allPassiveAbilityTypes.find(type => type.key === key);\r\n    }\r\n}\r\n","import { PassiveAbilityArgumentType } from \"./passive-ability-argument-type\";\r\nimport { PassiveAbility } from \"./passive-ability\";\r\nimport { Character } from \"../arenas/character\";\r\n\r\nexport class PassiveAbilityType {\r\n    public key: string;\r\n    public argumentTypes: { [keys: string]: PassiveAbilityArgumentType };\r\n    public getDescription: (ability: PassiveAbility) => string;\r\n    public applyEffect: (ability: PassiveAbility, owner: Character) => void;\r\n    public removeEffect: (ability: PassiveAbility, owner: Character) => void;\r\n\r\n    public static create(options: {\r\n        key: string,\r\n        argumentTypes: { [keys: string]: PassiveAbilityArgumentType },\r\n        getDescription: (ability: PassiveAbility) => string,\r\n        applyEffect: (ability: PassiveAbility, owner: Character) => void,\r\n        removeEffect: (ability: PassiveAbility, owner: Character) => void\r\n    }): PassiveAbilityType {\r\n        const abilityType = new PassiveAbilityType();\r\n        abilityType.key = options.key;\r\n        abilityType.argumentTypes = options.argumentTypes;\r\n        abilityType.getDescription = options.getDescription;\r\n        abilityType.applyEffect = options.applyEffect;\r\n        abilityType.removeEffect = options.removeEffect;\r\n        return abilityType;\r\n    }\r\n}\r\n","import { PassiveAbilityType } from \"./passive-ability-type\";\r\nimport { DBPassiveAbility } from \"../../game-state/db-passive-ability\";\r\nimport { GameServices } from \"../game-services\";\r\n\r\nexport class PassiveAbility {\r\n    public dbModel: DBPassiveAbility;\r\n    public type: PassiveAbilityType;\r\n    public get args () {\r\n        return this.dbModel.args;\r\n    }\r\n\r\n    public static load(dbModel: DBPassiveAbility): PassiveAbility {\r\n        const passiveAbility = new PassiveAbility();\r\n        passiveAbility.dbModel = dbModel;\r\n        passiveAbility.type = GameServices.passiveAbilityTypes.getByKey(dbModel.typeKey);\r\n        return passiveAbility;\r\n    }\r\n}","import { MonsterType } from \"./monster-type\";\r\nimport { DBMonster } from \"../../game-state/db-monster\";\r\nimport { DBSkill } from \"../../game-state/db-skill\";\r\n\r\nexport class MonsterService {\r\n    private nextMonsterId: number = 1;\r\n    \r\n    public createDBMonster(level: number, type: MonsterType): DBMonster {\r\n        const dbMonster = <DBMonster> {\r\n            id: this.nextMonsterId++,\r\n            typeKey: type.key,\r\n            level: level,\r\n            isAlive: true,\r\n            skills: type.skillTypes.map(skillType => {\r\n                return <DBSkill> {\r\n                    remainingCooldown: 0, \r\n                    typeKey: skillType.value.key\r\n                }\r\n            })\r\n        };\r\n\r\n        return dbMonster;\r\n    }\r\n}\r\n","import { MonsterType } from \"./monster-type\";\r\nimport { Attributes } from \"../attributes/attributes\";\r\nimport { GameServices } from \"../game-services\";\r\n\r\nexport class MonsterTypeService {\r\n    public wolf: MonsterType;\r\n    public snake: MonsterType;\r\n\r\n    public allMonsterTypes: MonsterType[];\r\n\r\n    public initialize () {\r\n        this.wolf = MonsterType.create({\r\n            key: 'wolf',\r\n            name: 'Wolf',\r\n            description: 'A mighty wolf',\r\n            imageName: 'wolf.png',\r\n            attributesBase: Attributes.create({\r\n                attackDamage: 10,\r\n                attackSpeed: 1.0,\r\n                armor: 10,\r\n                maximumHealth: 300\r\n            }),\r\n            attributesPerLevel: Attributes.create({\r\n                attackDamage: 1,\r\n                armor: 0.4,\r\n                maximumHealth: 20\r\n            }),\r\n            skillTypes: [{weight: 500, value: GameServices.skillTypes.basicAttack}]\r\n        });\r\n\r\n        this.snake = MonsterType.create({\r\n            key: 'snake',\r\n            name: 'Snake',\r\n            description: 'A cunning snake',\r\n            imageName: 'snake.png',\r\n            attributesBase: Attributes.create({\r\n                attackDamage: 15,\r\n                attackSpeed: 1.8,\r\n                maximumHealth: 200\r\n            }),\r\n            attributesPerLevel: Attributes.create({\r\n                attackDamage: 2,\r\n                maximumHealth: 12\r\n            }),\r\n            skillTypes: [{weight: 500, value: GameServices.skillTypes.basicAttack}]\r\n        });\r\n\r\n        this.allMonsterTypes = [\r\n            this.wolf, \r\n            this.snake\r\n        ];\r\n    }\r\n\r\n    public getByKey(key: string): MonsterType {\r\n        return this.allMonsterTypes.find(type => type.key === key);\r\n    }\r\n}\r\n","import { Attributes } from \"../attributes/attributes\";\r\nimport { SkillType } from \"../skills/skill-type\";\r\nimport { WeightedValue } from \"../shared/weighted-value\";\r\n\r\nexport class MonsterType {\r\n    public key: string;\r\n    public name: string;\r\n    public description: string;\r\n    public imageName: string;\r\n    public attributesBase: Attributes;\r\n    public attributesPerLevel: Attributes;\r\n    public skillTypes: WeightedValue<SkillType>[];\r\n\r\n    public static create (options: {\r\n        key: string,\r\n        name: string,\r\n        description: string,\r\n        imageName: string,\r\n        attributesBase: Attributes,\r\n        attributesPerLevel: Attributes,\r\n        skillTypes: WeightedValue<SkillType>[]\r\n    }): MonsterType {\r\n        const monsterType = new MonsterType();\r\n        monsterType.key = options.key;\r\n        monsterType.name = options.name;\r\n        monsterType.description = options.description;\r\n        monsterType.imageName = options.imageName;\r\n        monsterType.attributesBase = options.attributesBase;\r\n        monsterType.attributesPerLevel = options.attributesPerLevel;\r\n        monsterType.skillTypes = options.skillTypes;\r\n        return monsterType;\r\n    }\r\n}\r\n","import { DBMonster } from \"../../game-state/db-monster\";\r\nimport { Attributes } from \"../attributes/attributes\";\r\nimport { MonsterType } from \"./monster-type\";\r\nimport { Observable, ObservableFactory, ObservableWith1Argument } from \"../../common/observable\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { Skill } from \"../skills/skill\";\r\nimport { DamageType } from \"../skills/damage-type\";\r\nimport { DamageTakenEvent } from \"./damage-taken-event\";\r\n\r\nexport class Monster {\r\n    private dbModel: DBMonster;\r\n    public type: MonsterType;\r\n    public attributes: Attributes;\r\n    private attributesFromLevel: Attributes;\r\n    public skills: Skill[];\r\n    public onDeath: Observable = ObservableFactory.create();\r\n    public onDamageTaken: ObservableWith1Argument<DamageTakenEvent> = ObservableFactory.createWith1Argument();\r\n\r\n    public get id(): number { return this.dbModel.id; }\r\n    public get name(): string { return this.type.name; }\r\n    public get isAlive(): boolean { return this.dbModel.isAlive; }\r\n\r\n    public get currentHealth(): number {\r\n        return this.dbModel.currentHealth;\r\n    }\r\n    public set currentHealth(value: number) {\r\n        this.dbModel.currentHealth = value;\r\n        if (this.dbModel.currentHealth <= 0 && !this.dbModel.isAlive) {\r\n            this.dbModel.isAlive = false;\r\n            this.onDeath.notify();\r\n        }\r\n    }\r\n\r\n    public static load (dbMonster: DBMonster): Monster {\r\n        const monster = new Monster();\r\n        monster.dbModel = dbMonster;\r\n        monster.type = GameServices.monsterTypes.getByKey(monster.dbModel.typeKey);\r\n        monster.attributes = Attributes.create();\r\n        monster.type.attributesBase.all.forEach(baseAttribute => \r\n            monster.attributes.get(baseAttribute.type).amount.setAdditiveValueContainer(baseAttribute.amount)\r\n        );\r\n        monster.attributesFromLevel = Attributes.create();\r\n        monster.type.attributesPerLevel.all.forEach(perLevelAttribute => {\r\n            const attributeFromLevelValueContainer = monster.attributesFromLevel.get(perLevelAttribute.type).amount;\r\n            attributeFromLevelValueContainer.setAdditiveValueContainer(perLevelAttribute.amount);\r\n            attributeFromLevelValueContainer.setMultiplicativeModifier(monster, monster.dbModel.level);\r\n            monster.attributes.get(perLevelAttribute.type).amount.setAdditiveValueContainer(attributeFromLevelValueContainer);\r\n        });\r\n        monster.skills = monster.dbModel.skills.map(Skill.load);\r\n        monster.skills.forEach(skill => skill.type.setUpValueContainers(monster, skill));\r\n        if (dbMonster.currentHealth === undefined) {\r\n            dbMonster.currentHealth = monster.attributes.maximumHealth.value;\r\n        }\r\n        return monster;\r\n    }\r\n\r\n\r\n    public recalculateAttributes(): void {\r\n        this.type.attributesBase.all.forEach(attr => \r\n            this.attributes.get(attr.type).amount.setAdditiveModifier(attr, attr.amount.value)\r\n        );\r\n\r\n        this.type.attributesPerLevel.all.forEach(attr => \r\n            this.attributes.get(attr.type).amount.setAdditiveModifier(attr, attr.amount.value * this.dbModel.level)\r\n        );\r\n    }\r\n\r\n    public takeDamage(amount: number, type: DamageType): void {\r\n        this.currentHealth -= amount;\r\n        if (this.currentHealth <= 0) {\r\n            this.currentHealth = 0;\r\n            this.dbModel.isAlive = false;\r\n        }\r\n        this.onDamageTaken.notify({\r\n            amount: amount,\r\n            type: type\r\n        });\r\n    }\r\n}","import { WeightedValue } from \"./weighted-value\";\r\n\r\nexport class RandomService {\r\n    public getWeightedValue <T>(weightedValues: WeightedValue<T>[]): T {\r\n        const weightSum = weightedValues.map(wv => wv.weight).reduce((prev, cur) => prev + cur);\r\n        let result = Math.random() * weightSum;\r\n        for(let wv of weightedValues) {\r\n            if (result <= wv.weight) {\r\n                return wv.value;\r\n            } else {\r\n                result -= wv.weight;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getRandomElement <T>(array: T[]): T {\r\n        const index = this.randomInteger(0, array.length - 1);\r\n        return array[index];\r\n    }\r\n\r\n    public rollSuccess (successChance: number): boolean {\r\n        return Math.random() < successChance;\r\n    }\r\n\r\n    public randomInteger (min: number, max: number): number {\r\n        const rolledValue = Math.random() * (max - min + 1) + min;\r\n        const roundedRolledValue = Math.floor(rolledValue);\r\n        return roundedRolledValue;\r\n    }\r\n\r\n    public randomDecimal (min: number, max: number): number {\r\n        const rolledValue = Math.random() * (max - min) + min;\r\n        return rolledValue;\r\n    }\r\n}\r\n","import { ObservableWith1Argument, ObservableFactory } from \"../../common/observable\";\r\nimport { NumberChangeEvent } from \"./value-container-change\";\r\n\r\nclass ValueModifier {\r\n    public amount: number;\r\n    public key: any;\r\n\r\n    constructor (key: any, amount: number) {\r\n        this.amount = amount;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport class ValueContainer {\r\n    private additiveModifiers: ValueModifier[] = [];\r\n    private additiveValueContainers: ValueContainer[] = [];\r\n    private multiplicativeModifiers: ValueModifier[] = [];\r\n    private multiplicativeValueContainers: ValueContainer[] = [];\r\n    public value = 0;\r\n    public onValueChange: ObservableWith1Argument<NumberChangeEvent> = ObservableFactory.createWith1Argument<NumberChangeEvent>();\r\n    public constructor (baseValue?: number) {\r\n        if (baseValue !== undefined) {\r\n            this.setAdditiveModifier(this, baseValue);\r\n        }\r\n    }\r\n    public recalculateValue (): void {\r\n        let newValue = 0;\r\n        this.additiveModifiers.forEach(mod => newValue += mod.amount);\r\n        this.multiplicativeModifiers.forEach(mod => newValue *= mod.amount);\r\n        if (this.value !== newValue) {\r\n            const valueChange = <NumberChangeEvent> {\r\n                previousValue: this.value,\r\n                newValue: newValue\r\n            };\r\n            this.value = newValue;\r\n            this.onValueChange.notify(valueChange);\r\n        }\r\n    }\r\n    public setAdditiveModifier (key: any, amount: number) {\r\n        const existingModifier = this.additiveModifiers.find(mod => mod.key === key);\r\n        if (existingModifier) {\r\n            existingModifier.amount = amount;\r\n        } else {\r\n            const newModifier = new ValueModifier(key, amount);\r\n            this.additiveModifiers.push(newModifier);\r\n        }\r\n        this.recalculateValue();\r\n    }\r\n    public setAdditiveValueContainer (valueContainer: ValueContainer) {\r\n        const exists = this.additiveValueContainers.includes(valueContainer);\r\n        if (!exists) {\r\n            this.additiveValueContainers.push(valueContainer);\r\n            this.setAdditiveModifier(valueContainer, valueContainer.value);\r\n            this.recalculateValue();\r\n            valueContainer.onValueChange.addSubscription(\r\n                this, \r\n                valueChange => {\r\n                    this.setAdditiveModifier(valueContainer, valueChange.newValue);\r\n                    this.recalculateValue();\r\n                }\r\n            );\r\n        }\r\n    }\r\n    public setMultiplicativeModifier (key: any, amount: number) {\r\n        const existingModifier = this.multiplicativeModifiers.find(mod => mod.key === key);\r\n        if (existingModifier) {\r\n            existingModifier.amount = amount;\r\n        } else {\r\n            const newModifier = new ValueModifier(key, amount);\r\n            this.multiplicativeModifiers.push(newModifier);\r\n        }\r\n        this.recalculateValue();\r\n    }\r\n    public setMultiplicativeValueContainer (valueContainer: ValueContainer) {\r\n        const exists = this.multiplicativeValueContainers.includes(valueContainer);\r\n        if (!exists) {\r\n            this.multiplicativeValueContainers.push(valueContainer);\r\n\r\n            this.setMultiplicativeModifier(valueContainer, valueContainer.value);\r\n            this.recalculateValue();\r\n            valueContainer.onValueChange.addSubscription(\r\n                this, \r\n                valueChange => {\r\n                    this.setMultiplicativeModifier(valueContainer, valueChange.newValue);\r\n                    this.recalculateValue();\r\n                }\r\n            );\r\n        }\r\n    }\r\n    public removeAllModifiers (key: any): void {\r\n        this.additiveModifiers = this.additiveModifiers.filter(mod => mod.key !== key);\r\n        this.additiveValueContainers = this.additiveValueContainers.filter(vc => vc !== key);\r\n        this.multiplicativeModifiers = this.multiplicativeModifiers.filter(mod => mod.key !== key);\r\n        this.multiplicativeValueContainers = this.multiplicativeValueContainers.filter(vc => vc !== key);\r\n    }\r\n}\r\n","export enum DamageType {\r\n    physical,\r\n    magic\r\n}","export enum SkillTag {\r\n    attack\r\n}\r\n","import { SkillType } from \"./skill-type\";\r\nimport { Character } from \"../arenas/character\";\r\nimport { ArenaRoom } from \"../arenas/arena-room\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { DamageType } from \"./damage-type\";\r\nimport { SkillTag } from \"./skill-tag\";\r\nimport { ValueContainer } from \"../shared/value-container\";\r\n\r\nexport class SkillTypeService {\r\n    public basicAttack: SkillType;\r\n    public allSkillTypes: SkillType[];\r\n    public initialize() {\r\n        this.basicAttack = SkillType.create({\r\n            key: \"basic-attack\",\r\n            name: 'Attack',\r\n            description: 'Deals physical damage to a single enemy',\r\n            imageName: 'basic-attack.png',\r\n            cooldown: 1000,\r\n            energyCost: 0,\r\n            canTargetEnemy: true,\r\n            canTargetFriend: false,\r\n            tags: [SkillTag.attack],\r\n            effect: (user: Character, target: Character, arenaRoom: ArenaRoom) => {\r\n                let damage = user.attributes.attackDamage.value;\r\n                const isCriticalStrike = GameServices.random.rollSuccess(user.attributes.attackCriticalMultiplier.value);\r\n                if (isCriticalStrike) {\r\n                    damage *= user.attributes.attackCriticalMultiplier.value;\r\n                }\r\n\r\n                this.dealDamage(target, damage, DamageType.physical);\r\n            },\r\n            setUpValueContainers: (character, skill) => {\r\n                const attackSpeedMultiplier = new ValueContainer();\r\n                attackSpeedMultiplier.setAdditiveValueContainer(character.attributes.attackSpeed);\r\n                skill.cooldown.setMultiplicativeModifier(attackSpeedMultiplier, 1 / attackSpeedMultiplier.value);\r\n                attackSpeedMultiplier.onValueChange.addSubscription(\r\n                    attackSpeedMultiplier, \r\n                    event => skill.cooldown.setMultiplicativeModifier(attackSpeedMultiplier, 1 / event.newValue)\r\n                );\r\n                skill.cooldown.setMultiplicativeValueContainer(attackSpeedMultiplier);\r\n            }\r\n        });\r\n\r\n        this.allSkillTypes = [\r\n            this.basicAttack\r\n        ];\r\n    }\r\n\r\n    public getByKey(key: string): SkillType {\r\n        return this.allSkillTypes.find(type => type.key === key);\r\n    }\r\n\r\n    private dealDamage(damageReceiver: Character, damage: number, damageType: DamageType): void {\r\n        switch(damageType) {\r\n            case DamageType.physical: {\r\n                const damageReceived = this.reduceDamageBasedOnArmor(damage, damageReceiver.attributes.armor.value);\r\n                damageReceiver.takeDamage(damageReceived, damageType);\r\n                break;\r\n            }\r\n            case DamageType.magic: {\r\n                const damageReceived = this.reduceDamageBasedOnMagicResistance(damage, damageReceiver.attributes.magicResistance.value);\r\n                damageReceiver.takeDamage(damageReceived, damageType);\r\n                break;\r\n            }\r\n            default:\r\n                throw { message: 'Unknown damage type: ' + damageType };\r\n        }\r\n    }\r\n\r\n    private reduceDamageBasedOnArmor(damage: number, armor: number): number {\r\n        return damage * 100/(100 + armor);\r\n    }\r\n    private reduceDamageBasedOnMagicResistance(damage: number, magicResistance: number): number {\r\n        return damage * 100/(100 + magicResistance);\r\n    }\r\n}\r\n","import { SkillEffect } from \"./skill-effect\";\r\nimport { SkillTag } from \"./skill-tag\";\r\nimport { Character } from \"../arenas/character\";\r\nimport { Skill } from \"./skill\";\r\n\r\nexport class SkillType {\r\n    public key: string;\r\n    public name: string;\r\n    public description: string;\r\n    public imageName: string;\r\n    public cooldown: number;\r\n    public energyCost: number;\r\n    public canTargetEnemy: boolean;\r\n    public canTargetFriend: boolean;\r\n    public tags: SkillTag[];\r\n    public effect: SkillEffect;\r\n    public setUpValueContainers: (character: Character, skill: Skill) => void;\r\n    \r\n    public get requiresTarget(): boolean { return this.canTargetEnemy || this.canTargetFriend; }\r\n    \r\n    public static create (options: {\r\n        key: string,\r\n        name: string,\r\n        description: string,\r\n        imageName: string,\r\n        cooldown: number,\r\n        energyCost: number,\r\n        canTargetEnemy: boolean,\r\n        canTargetFriend: boolean,\r\n        tags: SkillTag[],\r\n        effect: SkillEffect,\r\n        setUpValueContainers: (character: Character, skill: Skill) => void\r\n    }): SkillType {\r\n        const skillType = new SkillType();\r\n        skillType.key = options.key;\r\n        skillType.name = options.name;\r\n        skillType.description = options.description;\r\n        skillType.imageName = options.imageName;\r\n        skillType.cooldown = options.cooldown;\r\n        skillType.energyCost = options.energyCost;\r\n        skillType.canTargetEnemy = options.canTargetEnemy;\r\n        skillType.canTargetFriend = options.canTargetFriend;\r\n        skillType.tags = options.tags;\r\n        skillType.effect = options.effect;\r\n        skillType.setUpValueContainers = options.setUpValueContainers;\r\n        return skillType;\r\n    }\r\n}\r\n","import { DBSkill } from \"../../game-state/db-skill\";\r\nimport { SkillType } from \"./skill-type\";\r\nimport { GameServices } from \"../game-services\";\r\nimport { ObservableWith1Argument, ObservableFactory } from \"../../common/observable\";\r\nimport { NumberChangeEvent } from \"../shared/value-container-change\";\r\nimport { ValueContainer } from \"../shared/value-container\";\r\n\r\nexport class Skill {\r\n    public dbModel: DBSkill;\r\n    public type: SkillType;\r\n    public cooldown: ValueContainer = new ValueContainer();\r\n    \r\n    public onCooldownChanged: ObservableWith1Argument<NumberChangeEvent> = ObservableFactory.createWith1Argument<NumberChangeEvent>();\r\n\r\n    public get remainingCooldown(): number { return this.dbModel.remainingCooldown; }\r\n    public get isReady(): boolean {return this.dbModel.remainingCooldown === 0;}\r\n\r\n    public static load (dbModel: DBSkill): Skill {\r\n        const skill = new Skill();\r\n        skill.dbModel = dbModel;\r\n        skill.type = GameServices.skillTypes.getByKey(skill.dbModel.typeKey);\r\n        skill.cooldown.setAdditiveModifier(skill.type, skill.type.cooldown);\r\n        return skill;\r\n    }\r\n\r\n    public resetCooldown(): void {\r\n        const previousRemainingCooldown = this.dbModel.remainingCooldown;\r\n        const newReminingCooldown = this.cooldown.value;\r\n        this.dbModel.remainingCooldown = newReminingCooldown;\r\n        this.onCooldownChanged.notify({\r\n            previousValue: previousRemainingCooldown,\r\n            newValue: newReminingCooldown\r\n        });\r\n    }\r\n\r\n    public reduceCooldown(time: number): void {\r\n        const previousRemainingCooldown = this.dbModel.remainingCooldown;\r\n        let newReminingCooldown = previousRemainingCooldown - time;\r\n        if (newReminingCooldown <= 0) {\r\n            newReminingCooldown = 0;\r\n        }\r\n        if (previousRemainingCooldown !== newReminingCooldown) {\r\n            this.dbModel.remainingCooldown = newReminingCooldown;\r\n            this.onCooldownChanged.notify({\r\n                previousValue: previousRemainingCooldown,\r\n                newValue: newReminingCooldown\r\n            });\r\n        }\r\n    }\r\n}","import { DBGame } from \"../game-state/db-game\";\r\n\r\nexport class VersionService {\r\n    public currentVersion: string = \"0.0.1\";\r\n\r\n    public upgradeSaveGameToCurrentVersion (dbGame: DBGame): DBGame {\r\n        return dbGame;\r\n    }\r\n}\r\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./combat.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React = require(\"react\");\r\nimport { Character } from \"../../../game/arenas/character\";\r\nimport { UIProgressBar } from \"../shared/ui-progress-bar\";\r\nimport { Hero } from \"../../../game/heroes/hero\";\r\n\r\ntype Props = {character: Character};\r\ntype State = {currentHealth: number, isAlive: boolean};\r\nexport class UICombatArenaCharacter extends React.Component<Props, State> {\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            currentHealth: props.character.currentHealth,\r\n            isAlive: props.character.isAlive\r\n        };\r\n    }\r\n    public componentDidMount(): void {\r\n        this.props.character.onDamageTaken.addSubscription(\r\n            this, \r\n            event => \r\n                this.setState({\r\n                    currentHealth: this.props.character.currentHealth,\r\n                    isAlive: this.props.character.isAlive\r\n                })\r\n        );\r\n    }\r\n    public componentWillUnmount(): void {\r\n        this.props.character.onDamageTaken.removeSubscription(this);\r\n    }\r\n    private getImageFolderPath(): string {\r\n        return this.props.character instanceof Hero \r\n            ? 'img/heroes/'\r\n            : 'img/monsters/';\r\n    }\r\n    private getImageName(): string {\r\n        return this.state.isAlive ? this.props.character.type.imageName : \"tombstone.png\";\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"character\">\r\n                <div className=\"character-name\">{this.props.character.name}</div>\r\n                <UIProgressBar\r\n                    min={0} \r\n                    max={this.props.character.attributes.maximumHealth.value} \r\n                    current={this.state.currentHealth}\r\n                ></UIProgressBar>\r\n                <div \r\n                    className=\"character-image\" \r\n                    style={{backgroundImage: `url(${this.getImageFolderPath()}${this.getImageName()})`}}\r\n                >\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\nimport { Skill } from \"../../../game/skills/skill\";\r\n\r\ntype Props = {skill: Skill, onSkillSelected: () => void};\r\ntype State = {remainingCooldown: number};\r\nexport class UICombatArenaSkill extends React.Component<Props, State> {\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            remainingCooldown: props.skill.remainingCooldown\r\n        };\r\n    }\r\n    public componentDidMount(): void {\r\n        this.props.skill.onCooldownChanged.addSubscription(\r\n            this, \r\n            event => \r\n                this.setState({\r\n                    remainingCooldown: this.props.skill.remainingCooldown\r\n                })\r\n        );\r\n    }\r\n    public componentWillUnmount(): void {\r\n        this.props.skill.onCooldownChanged.removeSubscription(this);\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div \r\n                key={this.props.skill.type.key} \r\n                className=\"skill-container\"\r\n                onClick={() => this.props.onSkillSelected()}\r\n                style={{opacity: 1 - this.state.remainingCooldown / this.props.skill.type.cooldown}}\r\n            >\r\n                <div className=\"skill-name\">{this.props.skill.type.name}</div>\r\n                <div className=\"skill-image\" style={{backgroundImage: `url(img/skills/${this.props.skill.type.imageName})`}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\nimport { Arena } from \"../../../game/arenas/arena\";\r\nimport { UICombatArenaCharacter } from \"./ui-combat-arena-character\";\r\nimport { Hero } from \"../../../game/heroes/hero\";\r\nimport { Character } from \"../../../game/arenas/character\";\r\nimport { Skill } from \"../../../game/skills/skill\";\r\nimport { UICombatArenaSkill } from \"./ui-combat-arena-skill\";\r\n\r\ntype Props = {arena: Arena};\r\ntype State = {\r\n    selectedHero: Hero, \r\n    selectedSkill: Skill,\r\n    isChoosingTarget: boolean, \r\n    legalTargets: Character[],\r\n    hasPlayerLost: boolean,\r\n    hasPlayerWon: boolean\r\n};\r\nexport class UICombatArena extends React.Component<Props, State> {\r\n    private heroContainerStyles: React.CSSProperties[] = [{\r\n        left: '10px',\r\n        bottom: '10px',\r\n        zIndex: 12\r\n    }, {\r\n        left: '150px',\r\n        bottom: '100px',\r\n        zIndex: 11\r\n    }, {\r\n        left: '290px',\r\n        bottom: '190px',\r\n        zIndex: 10\r\n    }];\r\n\r\n    private monsterContainerStyles: React.CSSProperties[] = [{\r\n        right: '10px',\r\n        bottom: '10px',\r\n        zIndex: 12\r\n    }, {\r\n        right: '150px',\r\n        bottom: '100px',\r\n        zIndex: 11\r\n    }, {\r\n        right: '290px',\r\n        bottom: '190px',\r\n        zIndex: 10\r\n    }];\r\n\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedHero: props.arena.currentRoom.heroes[0],\r\n            selectedSkill: null,\r\n            isChoosingTarget: false,\r\n            legalTargets: [],\r\n            hasPlayerLost: props.arena.hasPlayerLost,\r\n            hasPlayerWon: false\r\n        };\r\n\r\n        this.props.arena.onPlayerLose.addSubscription(this, () => this.onPlayerLose());\r\n    }\r\n\r\n    private selectSkill(skill: Skill): void {\r\n        let legalTargets: Character[] = [];\r\n        const friendTargets = this.props.arena.currentRoom.heroes.filter(hero => hero.isAlive);\r\n        const enemyTargets = this.props.arena.currentRoom.currentEncounter.monsters.filter(monster => monster.isAlive);\r\n        if (skill.type.canTargetFriend) {\r\n            legalTargets = legalTargets.concat(friendTargets);\r\n        }\r\n        if (skill.type.canTargetEnemy) {\r\n            legalTargets = legalTargets.concat(enemyTargets);\r\n        }\r\n\r\n        this.setState({\r\n            selectedSkill: skill,\r\n            isChoosingTarget: true,\r\n            legalTargets: legalTargets\r\n        });\r\n    }\r\n\r\n    private onClickOnCharacter(target: Character): void {\r\n        if (this.state.isChoosingTarget && this.state.legalTargets.includes(target)) {\r\n            this.props.arena.useSkill(this.state.selectedHero, target, this.state.selectedSkill);\r\n        }\r\n    }\r\n\r\n    private onPlayerLose(): void {\r\n        this.setState({\r\n            hasPlayerLost: true\r\n        });\r\n    }\r\n    \r\n    public render(): JSX.Element {\r\n        return (\r\n            <div \r\n                className=\"arena\" \r\n                style={{backgroundImage: `url(img/arenas/${this.props.arena.type.imageName})`}}\r\n            >\r\n                <div className=\"header\">\r\n                    <div className=\"room-info\">\r\n                        <div className=\"room-name\">[RoomName]</div>\r\n                        <div className=\"room-progress\">{`Room ${this.props.arena.currentRoomIndex + 1}/${this.props.arena.rooms.length}`}</div>\r\n                        <div className=\"encounter-progress\">{`Encounter ${this.props.arena.currentRoom.currentEncounterIndex + 1}/${this.props.arena.currentRoom.encounters.length}`}</div>\r\n                    </div>\r\n                    <div className=\"arena-info\">\r\n                        <div className=\"arena-name\">{this.props.arena.type.name}</div>\r\n                        <div className=\"arena-level\">{`Level ${this.props.arena.level}`}</div>    \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    {this.props.arena.currentRoom.heroes.map((hero, index) =>\r\n                        <div \r\n                            key={hero.id}\r\n                            className={\r\n                                `character-container selectable ${\r\n                                this.state.selectedHero === hero ? 'selected' : ''} ${\r\n                                (this.state.isChoosingTarget && this.state.legalTargets.includes(hero)) ? 'legal-target' : ''\r\n                            }`}\r\n                            style={this.heroContainerStyles[index]}\r\n                            onClick={() => this.onClickOnCharacter(hero)}\r\n                        >\r\n                            <UICombatArenaCharacter character={hero}></UICombatArenaCharacter>\r\n                        </div>\r\n                    )}\r\n\r\n                    {this.props.arena.currentRoom.currentEncounter.monsters.map((monster, index) =>\r\n                        <div \r\n                            key={monster.id}\r\n                            className={\r\n                                `character-container ${\r\n                                (this.state.isChoosingTarget && this.state.legalTargets.includes(monster)) ? 'legal-target' : ''\r\n                            }`}\r\n                            style={this.monsterContainerStyles[index]}\r\n                            onClick={() => this.onClickOnCharacter(monster)}\r\n                        >\r\n                            <UICombatArenaCharacter character={monster}></UICombatArenaCharacter>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"skills-container\">\r\n                        {this.state.selectedHero.skills.map(skill =>\r\n                            <UICombatArenaSkill \r\n                                key={skill.type.key}\r\n                                skill={skill} \r\n                                onSkillSelected={() => this.selectSkill(skill)}\r\n                            >\r\n                            </UICombatArenaSkill>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.hasPlayerLost\r\n                    ?\r\n                        <div className=\"overlay\">\r\n                            <div>\r\n                                <div>You died!</div>\r\n                                <button>Resurrect</button>\r\n                            </div>\r\n                        </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\nimport { GameServices } from \"../../../game/game-services\";\r\nimport { Arena } from \"../../../game/arenas/arena\";\r\nimport { UICombatArena } from \"./ui-combat-arena\";\r\n\r\ntype Props = {selectedArena: Arena};\r\ntype State = {selectedArena: Arena};\r\nexport class UICombatBody extends React.Component<Props, State> {\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedArena: GameServices.currentGame.arenas.length > 0 \r\n                ? GameServices.currentGame.arenas[0]\r\n                : null\r\n        };\r\n    }\r\n    private get arenas(): Arena[] {\r\n        return GameServices.currentGame.arenas;\r\n    }\r\n    private setSelectedArena(arena: Arena) {\r\n        this.setState({\r\n            selectedArena: arena\r\n        });\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"combat-body-container\">\r\n                <div className=\"arenas-container\">\r\n                    <ul className=\"arenas\">\r\n                        {this.arenas.map((arena, index) => \r\n                            <li\r\n                                key={index}\r\n                                className=\"arena\"\r\n                                onClick={() => this.setSelectedArena(arena)}\r\n                            >\r\n                                <div>{arena.type.name}</div>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                {this.state.selectedArena \r\n                    ?   \r\n                        <div className=\"selected-arena-container\">\r\n                            <UICombatArena arena={this.state.selectedArena}></UICombatArena>\r\n                        </div>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./general.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./heroes.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React = require(\"react\");\r\nimport { GameServices } from \"../../../game/game-services\";\r\nimport { Hero } from \"../../../game/heroes/hero\";\r\nexport class UIHeroesBody extends React.Component<{}, {}> {\r\n    private get heroes(): Hero[] {\r\n        return GameServices.currentGame.heroes;\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"heroes-body-container\">\r\n                <ul className=\"heroes\">\r\n                {this.heroes.map(hero => \r\n                    <li\r\n                        key={hero.id}\r\n                    >\r\n                        <div>{hero.name}</div>\r\n                        <img src={`img/heroes/${hero.type.imageName}`} />\r\n                    </li>\r\n                )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport './general.scss';\r\nimport './structure.scss';\r\nimport './combat/combat.scss';\r\nimport './heroes/heroes.scss';\r\nimport './map/map.scss';\r\n\r\nimport { UIGame } from \"./ui-game\";\r\nimport { GameServices } from \"../../game/game-services\";\r\n\r\nGameServices.initialize();\r\n\r\nReactDOM.render(\r\n    <UIGame />,\r\n    document.getElementById(\"game-container\")\r\n);","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./map.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React = require(\"react\");\r\nimport { ArenaType } from \"../../../game/arenas/arena-type\";\r\nimport { GameServices } from \"../../../game/game-services\";\r\nimport { Hero } from \"../../../game/heroes/hero\";\r\nimport { Arena } from \"../../../game/arenas/arena\";\r\n\r\ntype Props = {\r\n    arenaType: ArenaType, \r\n    arenaStarted: (arena: Arena) => void\r\n};\r\ntype State = {selectedHeroes: Hero[]};\r\nexport class UIMapArenaTypeInformation extends React.Component<Props, State> {\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedHeroes: []\r\n        };\r\n    }\r\n    private toggleSelectedHero(hero: Hero): void {\r\n        if (this.state.selectedHeroes.includes(hero)) {\r\n            this.setState({\r\n                selectedHeroes: this.state.selectedHeroes.filter(selectedHero => selectedHero !== hero)\r\n            });\r\n        } else {\r\n            this.setState({\r\n                selectedHeroes: [...this.state.selectedHeroes, hero]\r\n            });\r\n        }\r\n    }\r\n    private handleStartArenaClicked(arenaType: ArenaType): void {\r\n        if (this.state.selectedHeroes.length > 0) {\r\n            const arena = GameServices.currentGame.spawnArena(arenaType, arenaType.level, this.state.selectedHeroes);\r\n            this.props.arenaStarted(arena);\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <div>{`${this.props.arenaType.name} (Lv. ${this.props.arenaType.level})`}</div>\r\n                <div>Heroes</div>\r\n                <div className=\"heroes\">\r\n                    {GameServices.currentGame.heroes.map(hero => \r\n                        <div\r\n                            key={hero.id}\r\n                            className=\"hero\"\r\n                            onClick={() => this.toggleSelectedHero(hero)}\r\n                        >\r\n                            <div>{hero.name}</div>\r\n                            <img src={`img/heroes/${hero.type.imageName}`} />\r\n                            {this.state.selectedHeroes.includes(hero)\r\n                                ? <div className=\"checkmark\" style={{backgroundImage: \"url(img/interface/checkmark.png)\"}}></div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button onClick={() => this.handleStartArenaClicked(this.props.arenaType)}>Start arena</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\nimport { GameServices } from \"../../../game/game-services\";\r\nimport { ArenaType } from \"../../../game/arenas/arena-type\";\r\nimport { Vector2 } from \"../../../common/vector2\";\r\nimport { UIDraggableContainer } from \"../shared/ui-draggable-container\";\r\nimport { UIMapArenaTypeInformation } from \"./ui-map-arena-type-information\";\r\nimport { Arena } from \"../../../game/arenas/arena\";\r\n\r\ntype Props = {arenaStarted: (arena: Arena) => void};\r\ntype State = {selectedArenaType: ArenaType};\r\nexport class UIMapBody extends React.Component<Props, State> {\r\n    private arenaTypeWidth = 200;\r\n    private arenaTypeHeight = 200;\r\n    private arenaTypeMargin = 10;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedArenaType: undefined\r\n        };\r\n    }\r\n\r\n    private getLeftInPixels(position: Vector2): string {\r\n        const value = position.x * (this.arenaTypeWidth + this.arenaTypeMargin);\r\n        return value + 'px';\r\n    }\r\n    private getTopInPixels(position: Vector2): string {\r\n        const value = position.y * (this.arenaTypeHeight + this.arenaTypeMargin);\r\n        return value + 'px';\r\n    }\r\n    private getWidthtInPixels(width: number): string {\r\n        const value = width;\r\n        return value + 'px';\r\n    }\r\n    private getHeightInPixels(height: number): string {\r\n        const value = height;\r\n        return value + 'px';\r\n    }\r\n    private getArenaTypeStyles(arenaType: ArenaType): React.CSSProperties {\r\n        return {\r\n            left: this.getLeftInPixels(arenaType.position),\r\n            top: this.getTopInPixels(arenaType.position),\r\n            width: this.getWidthtInPixels(this.arenaTypeWidth),\r\n            height: this.getHeightInPixels(this.arenaTypeHeight),\r\n            backgroundImage: `url(img/arenas/${arenaType.imageName})`\r\n        };\r\n    }\r\n    private selectArenaType(arenaType: ArenaType): void {\r\n        this.setState({selectedArenaType: arenaType});\r\n    }\r\n    private handleArenaTypeClick(event: React.MouseEvent, arenaType: ArenaType): void {\r\n        event.stopPropagation();\r\n        this.selectArenaType(arenaType);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"map-body-container\">\r\n                <div className=\"info-panel\">\r\n                    {this.state.selectedArenaType\r\n                        ? \r\n                            <UIMapArenaTypeInformation \r\n                                arenaType={this.state.selectedArenaType}\r\n                                arenaStarted={(arena: Arena) => {this.props.arenaStarted(arena)}}\r\n                            ></UIMapArenaTypeInformation>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div className=\"map-container\">\r\n                    <UIDraggableContainer>\r\n                        <div className=\"map\">\r\n                            {GameServices.arenaTypes.allArenaTypes.map(arenaType => \r\n                                <div \r\n                                    key={arenaType.key} \r\n                                    className=\"arena-type\" \r\n                                    style={this.getArenaTypeStyles(arenaType)}\r\n                                    onMouseDown={event => this.handleArenaTypeClick(event, arenaType)}\r\n                                >\r\n                                    <div className=\"header\">\r\n                                        <span className=\"name\">{arenaType.name}</span>\r\n                                        <span className=\"level\">Lv.{arenaType.level}</span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </UIDraggableContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\nimport { Vector2 } from \"../../../common/vector2\";\r\n\r\ntype Props = {className?: string, children: React.ReactNode};\r\nexport class UIDraggableContainer extends React.Component<Props, {translate: Vector2, zoom: number}> {\r\n    // Constants\r\n    private minZoom = 0.2;\r\n    private maxZoom = 2;\r\n    private wheelZoomEffect = 0.001;\r\n    private keyboardScrollSpeed = 1000;\r\n\r\n    // Mouse movement\r\n    private isDragging: boolean = false;\r\n    private dragTranslateX: number;\r\n    private dragTranslateY: number;\r\n    private dragActualX: number;\r\n    private dragActualY: number;\r\n\r\n    // Keyboard movement\r\n    private keysDown: number[] = [];\r\n    private updateIntervalID: number;\r\n    private documentKeyDownHandler: (event: KeyboardEvent) => void;\r\n    private documentKeyUpHandler: (event: KeyboardEvent) => void;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            translate: {x: 0, y: 0}, \r\n            zoom: 1\r\n        };\r\n    }\r\n    \r\n    private setZoom(value: number): number {\r\n        let newZoom = value;\r\n        if (value < this.minZoom) {\r\n            newZoom = this.minZoom;\r\n        } else if (value > this.maxZoom) {\r\n            newZoom = this.maxZoom;\r\n        }\r\n        this.setState({zoom: newZoom});\r\n        return newZoom;\r\n    }\r\n    private getContainerFromEventTarget(eventTarget: EventTarget): HTMLElement {\r\n        const targetElement = eventTarget as HTMLElement;\r\n        const isContainer = targetElement.classList.contains('.draggable-container');\r\n        const container = isContainer ? targetElement : targetElement.closest('.draggable-container');\r\n        return container as HTMLElement;\r\n    }\r\n    private onWheel(wheelEvent: React.WheelEvent<HTMLDivElement>): void {\r\n        const containerHTMLElement: HTMLElement = this.getContainerFromEventTarget(wheelEvent.target);\r\n        const viewPortX = wheelEvent.clientX - containerHTMLElement.offsetLeft;\r\n        const viewPortY = wheelEvent.clientY - containerHTMLElement.offsetTop;\r\n\r\n        const previousZoom = this.state.zoom;\r\n        const previousTranslateX = this.state.translate.x;\r\n        const previousTranslateY = this.state.translate.y;\r\n        const previousActualX = viewPortX / previousZoom - previousTranslateX;\r\n        const previousActualY = viewPortY / previousZoom - previousTranslateY;\r\n\r\n        const initialNewZoom = this.state.zoom - this.wheelZoomEffect * wheelEvent.deltaY;\r\n        const actualNewZoom = this.setZoom(initialNewZoom);\r\n\r\n        const newTranslateX = viewPortX / actualNewZoom - previousActualX;\r\n        const newTranslateY = viewPortY / actualNewZoom - previousActualY;\r\n\r\n        this.setState({\r\n            translate: {\r\n                x: newTranslateX,\r\n                y: newTranslateY\r\n            }\r\n        });\r\n    }\r\n    private onMouseDown (mouseEvent: React.MouseEvent<HTMLDivElement>): void {\r\n        const containerHTMLElement: HTMLElement = this.getContainerFromEventTarget(mouseEvent.target);\r\n        this.isDragging = true;\r\n        const viewPortX = mouseEvent.clientX - containerHTMLElement.offsetLeft;\r\n        const viewPortY = mouseEvent.clientY - containerHTMLElement.offsetTop;\r\n        const zoom = this.state.zoom;\r\n        const translateX = this.state.translate.x;\r\n        const translateY = this.state.translate.y;\r\n        const actualX = viewPortX / zoom - translateX;\r\n        const actualY = viewPortY / zoom - translateY;\r\n\r\n        this.dragTranslateX = translateX;\r\n        this.dragTranslateY = translateY;\r\n        this.dragActualX = actualX;\r\n        this.dragActualY = actualY;\r\n    }\r\n    private onMouseUp (mouseEvent: React.MouseEvent<HTMLDivElement>): void {\r\n        this.isDragging = false;\r\n    }\r\n    private onMouseMove (mouseEvent: React.MouseEvent<HTMLDivElement>): void {\r\n        if (this.isDragging) {\r\n            const containerHTMLElement: HTMLElement = this.getContainerFromEventTarget(mouseEvent.target);\r\n            const viewPortX = mouseEvent.clientX - containerHTMLElement.offsetLeft;\r\n            const viewPortY = mouseEvent.clientY - containerHTMLElement.offsetTop;\r\n            const zoom = this.state.zoom;\r\n            const actualX = viewPortX / zoom - this.dragTranslateX;\r\n            const actualY = viewPortY / zoom - this.dragTranslateY;\r\n            const deltaX = actualX - this.dragActualX;\r\n            const deltaY = actualY - this.dragActualY;\r\n            const newTranslateX = this.dragTranslateX + deltaX;\r\n            const newTranslateY = this.dragTranslateY + deltaY;\r\n    \r\n            this.setState({\r\n                translate: {\r\n                    x: newTranslateX,\r\n                    y: newTranslateY\r\n                }\r\n            });\r\n        }\r\n    }\r\n    private handleKeyDown(keyCode: number): void {\r\n        if (!this.keysDown.includes(keyCode)) {\r\n            this.keysDown.push(keyCode);\r\n        }\r\n    }\r\n    private handleKeyUp(keyCode: number): void {\r\n        if (this.keysDown.includes(keyCode)) {\r\n            this.keysDown.splice(this.keysDown.indexOf(keyCode), 1);\r\n        }\r\n    }\r\n    private getDraggableStyles(): React.CSSProperties {\r\n        return {\r\n            zoom: this.state.zoom * 100 + '%',\r\n            transform: `translate(${this.state.translate.x}px, ${this.state.translate.y}px)`\r\n        };\r\n    }\r\n    private update(dTime: number): void {\r\n        let deltaX: number = 0;\r\n        let deltaY: number = 0;\r\n        if (this.keysDown.includes(37)) {\r\n            deltaX -= this.keyboardScrollSpeed;\r\n        }\r\n        if (this.keysDown.includes(39)) {\r\n            deltaX += this.keyboardScrollSpeed;\r\n        }\r\n        if (this.keysDown.includes(38)) {\r\n            deltaY -= this.keyboardScrollSpeed;\r\n        }\r\n        if (this.keysDown.includes(40)) {\r\n            deltaY += this.keyboardScrollSpeed;\r\n        }\r\n        this.setState({\r\n            translate: {\r\n                x: this.state.translate.x + deltaX / dTime,\r\n                y: this.state.translate.y + deltaY / dTime\r\n            }\r\n        });\r\n    }\r\n    public UNSAFE_componentWillMount(): void {\r\n        this.documentKeyDownHandler = (event: KeyboardEvent) => {this.handleKeyDown(event.keyCode)}\r\n        this.documentKeyUpHandler = (event: KeyboardEvent) => {this.handleKeyUp(event.keyCode)}\r\n        this.updateIntervalID = setInterval(() => this.update(50), 50);\r\n        document.addEventListener(\"keydown\", this.documentKeyDownHandler, false);\r\n        document.addEventListener(\"keyup\", this.documentKeyUpHandler, false);\r\n    }\r\n    public UNSAFE_componentWillUnmount(): void {\r\n        clearInterval(this.updateIntervalID);\r\n        document.removeEventListener(\"keydown\", this.documentKeyDownHandler, false);\r\n        document.removeEventListener(\"keyup\", this.documentKeyUpHandler, false);\r\n    }\r\n    public getClassName(): string {\r\n        if (this.props.className) {\r\n            return `draggable-container ${this.props.className}`;\r\n        } else {\r\n            return `draggable-container`;\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div \r\n                className={this.getClassName()}\r\n                onWheel={(event: React.WheelEvent<HTMLDivElement>) => this.onWheel(event)}\r\n                onMouseDown={(event: React.MouseEvent<HTMLDivElement>) => this.onMouseDown(event)}\r\n                onMouseUp={(event: React.MouseEvent<HTMLDivElement>) => this.onMouseUp(event)}\r\n                onMouseMove={(event: React.MouseEvent<HTMLDivElement>) => this.onMouseMove(event)}\r\n            >\r\n                <div \r\n                    className=\"draggable\"\r\n                    style={this.getDraggableStyles()}\r\n                >\r\n                    { this.props.children }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\n\r\nexport class UIProgressBar extends React.Component<{min: number, max: number, current: number}> {\r\n    private getFillPercentage(): number {\r\n        return 100 * (this.props.max - this.props.current) / (this.props.max - this.props.min); \r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"progress-bar\">\r\n                <div className=\"bar\" style={{width: this.getFillPercentage() + '%'}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React = require(\"react\");\r\n\r\nexport class UITabButton extends React.Component<{text: string, imageUrl: string, isActive: boolean, onClick: () => void}> {\r\n    public render(): JSX.Element {\r\n        let className = 'tab';\r\n        if (this.props.isActive) {\r\n            className += ' active';\r\n        }\r\n\r\n        return (\r\n            <li className={className} onClick={this.props.onClick}>\r\n                <span>{this.props.text}</span>\r\n                <img src={this.props.imageUrl} />\r\n            </li>\r\n        );\r\n    }\r\n}","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./structure.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React = require(\"react\");\r\nimport { UITabButton } from \"./shared/ui-tab-button\";\r\nimport { UIMapBody } from \"./map/ui-map-body\";\r\nimport { UIHeroesBody } from \"./heroes/ui-heroes-body\";\r\nimport { UICombatBody } from \"./combat/ui-combat-body\";\r\n\r\ninterface TabProps {\r\n    key: string;\r\n    text: string;\r\n    imageUrl: string;\r\n}\r\n\r\nexport class UIBody extends React.Component<{},{activeTabKey: string}> {\r\n    private tabs: TabProps[];\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.tabs = [\r\n            {\r\n                key: 'heroes',\r\n                text: 'Heroes',\r\n                imageUrl: 'img/tabs/heroes.png'\r\n            },\r\n            {\r\n                key: 'combat',\r\n                text: 'Combat',\r\n                imageUrl: 'img/tabs/combat.png'\r\n            },\r\n            {\r\n                key: 'map',\r\n                text: 'Map',\r\n                imageUrl: 'img/tabs/map.png'\r\n            },\r\n            {\r\n                key: 'quests',\r\n                text: 'Quests',\r\n                imageUrl: 'img/tabs/quests.png'\r\n            },\r\n        ]\r\n\r\n        this.state = {activeTabKey: \"heroes\"};\r\n    }\r\n    private selectTab(tabKey: string): void {\r\n        this.setState ({activeTabKey: tabKey});\r\n    }\r\n    private renderCurrentTabBody(): JSX.Element {\r\n        switch(this.state.activeTabKey) {\r\n            case 'heroes':\r\n                return <UIHeroesBody></UIHeroesBody>;\r\n            case 'combat':\r\n                return <UICombatBody selectedArena={null}></UICombatBody>;\r\n            case 'map':\r\n                return <UIMapBody arenaStarted={(arena) => {this.selectTab('combat')}}></UIMapBody>;\r\n            case 'quests':\r\n                return null;\r\n            default: \r\n                return null;\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"body\">\r\n                <ul className=\"tabs\">\r\n                    {this.tabs.map(tab =>\r\n                        <UITabButton \r\n                            key={tab.key}\r\n                            text={tab.text} \r\n                            imageUrl={tab.imageUrl} \r\n                            isActive={this.state.activeTabKey === tab.key}\r\n                            onClick={() => this.selectTab(tab.key)}\r\n                        ></UITabButton>\r\n                    )}\r\n                </ul>\r\n                <div className=\"tab-body\">\r\n                    {this.renderCurrentTabBody()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\nimport { Game } from \"../../game/game\";\r\n\r\nexport const GameContext = React.createContext<Game>(null);\r\n","import * as React from \"react\";\r\nimport { Game } from \"../../game/game\";\r\nimport { GameContext } from \"./ui-game-context\";\r\nimport { UIHeader } from \"./ui-header\";\r\nimport { UIBody } from \"./ui-body\";\r\nimport { GameController } from \"../../game/game-controller\";\r\nimport { GameServices } from \"../../game/game-services\";\r\n\r\nexport class UIGame extends React.Component<{}, {game: Game}> {\r\n    constructor (props: {game: Game}) {\r\n        super(props);\r\n\r\n        this.state = {game: null};\r\n    }\r\n    newGame() {\r\n        const gameController = new GameController();\r\n        GameServices.currentGameController = gameController;\r\n        gameController.initialize();\r\n\r\n        gameController.newGame();\r\n        GameServices.currentGame = gameController.game;\r\n        \r\n        this.setState({game: gameController.game});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UIHeader versionNumber={GameServices.version.currentVersion} onNewGameClick={()=>this.newGame()}></UIHeader>\r\n                {\r\n                    this.state.game\r\n                    ? \r\n                    <GameContext.Provider value={this.state.game}>\r\n                        <UIBody></UIBody>\r\n                    </GameContext.Provider>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\n\r\nexport class UIHeader extends React.Component<{versionNumber: string, onNewGameClick: () => void}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"header\">\r\n                <span className=\"title-container\">\r\n                    <span className=\"title\">Loot Hoarder</span>\r\n                    <span className=\"version-number\">v{this.props.versionNumber}</span>\r\n                </span>\r\n                <span className=\"button btn-new-game\" onClick={this.props.onNewGameClick}>New game</span>\r\n            </div>\r\n        );\r\n    }\r\n}","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}